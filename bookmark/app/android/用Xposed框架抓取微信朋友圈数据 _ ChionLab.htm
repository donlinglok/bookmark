<!DOCTYPE html>
<!-- saved from url=(0072)https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/ -->
<html class="cye-disabled cye-nm gr__blog_chionlab_moe"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  
  <title>用Xposed框架抓取微信朋友圈数据 | ChionLab  </title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="因微信朋友圈为私有协议，从抓包上分析朋友圈数据几乎不可能，目前也尚未找到开源的抓取朋友圈的脚本。博主于是尝试通过使用安卓下的Xposed框架实现从微信安卓版上抓取朋友圈数据。本文针对微信版本6.3.8。GitHub仓库 主要思路从UI获取文本信息是最为简单的方法，于是应该优先逆向UI代码部分。 逆向微信apk首先解包微信apk，用dex2jar反编译classes.dex，然后用JD-GUI查看j">
<meta name="keywords" content="android,hack">
<meta property="og:type" content="article">
<meta property="og:title" content="用Xposed框架抓取微信朋友圈数据">
<meta property="og:url" content="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/index.html">
<meta property="og:site_name" content="ChionLab">
<meta property="og:description" content="因微信朋友圈为私有协议，从抓包上分析朋友圈数据几乎不可能，目前也尚未找到开源的抓取朋友圈的脚本。博主于是尝试通过使用安卓下的Xposed框架实现从微信安卓版上抓取朋友圈数据。本文针对微信版本6.3.8。GitHub仓库 主要思路从UI获取文本信息是最为简单的方法，于是应该优先逆向UI代码部分。 逆向微信apk首先解包微信apk，用dex2jar反编译classes.dex，然后用JD-GUI查看j">
<meta property="og:updated_time" content="2016-09-09T16:05:42.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="用Xposed框架抓取微信朋友圈数据">
<meta name="twitter:description" content="因微信朋友圈为私有协议，从抓包上分析朋友圈数据几乎不可能，目前也尚未找到开源的抓取朋友圈的脚本。博主于是尝试通过使用安卓下的Xposed框架实现从微信安卓版上抓取朋友圈数据。本文针对微信版本6.3.8。GitHub仓库 主要思路从UI获取文本信息是最为简单的方法，于是应该优先逆向UI代码部分。 逆向微信apk首先解包微信apk，用dex2jar反编译classes.dex，然后用JD-GUI查看j">
  
    <link rel="alternate" href="https://blog.chionlab.moe/atom.xml" title="ChionLab" type="application/atom+xml">
  
  
    <link rel="icon" href="https://blog.chionlab.moe/favicon.png">
    <link rel="apple-touch-icon" href="https://blog.chionlab.moe/favicon.png">
  
  <link href="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/googlefonts.css" rel="stylesheet" type="text/css">
  <link rel="stylesheet" href="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/style.css">
  <style>
    .article-duoshuo-link {
      float: right;
      margin-left: 20px;
    }
    .article-duoshuo-link:before {
      content: "\f086";
      font-family: "FontAwesome";
      padding-right: 8px;
    }
    .jc-bs3-container {
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }
  </style>
  <link href="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/jquery-confirm.min.css" rel="stylesheet" type="text/css">
  <script src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/jquery-2.2.0.min.js"></script><style id="nightModeStyle">
html.cye-enabled.cye-nm:not(*:-webkit-full-screen) body,
 html.cye-enabled.cye-nm:not(*:-webkit-full-screen) #cye-workaround-body {-webkit-filter:contrast(91%) brightness(84%) invert(1);}</style><style id="cyebody">html.cye-enabled.cye-lm body{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyediv">html.cye-enabled.cye-lm div{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyetable">html.cye-enabled.cye-lm th{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}html.cye-enabled.cye-lm td{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyetextInput">html.cye-enabled.cye-lm input[type=text]{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}html.cye-enabled.cye-lm textarea{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeselect">html.cye-enabled.cye-lm select{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeul">html.cye-enabled.cye-lm ul{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeChangeByClick">html.cye-enabled.cye-lm .cye-lm-tag,html.cye-enabled.cye-lm.cye-lm-tag{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style>
  <script src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/jquery-confirm.min.js"></script>
  <!--
  
    <script>
      var yunModuleEnv = true;
    </script>
    <script src="https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js"></script>
  
  -->

  
    <link rel="stylesheet" href="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/default.css">
    <script src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/gitment.browser.js"></script>
  

  

<script type="text/javascript" async="" src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/embed.js"></script><script type="text/javascript" async="" src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/count.js"></script><style type="text/css">.fancybox-margin{margin-right:15px;}</style><link rel="preload" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.9974049bf7b0591e5d4f055cb67f3ee3.css"><link rel="preload" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.880980e048a2432334f13013030456ac.js"><link rel="preload" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.7ca5005d1897180d07d928e89d2628be.js"><link rel="preload" as="script" href="https://disqus.com/next/config.js"></head><div id="cyeBlackMaskLayer" style="background-color: rgb(19, 19, 19); position: fixed; width: 1980px; height: 1080px; z-index: -2147483648;"></div>

<body data-gr-c-s-loaded="true" style="">
  <div id="container">
    <div id="wrap">
      <header id="header">
  <script>
    var JS_COOKIES_DOMAIN = '.chionlab.moe';
    var JsCookies = {
      // this gets a cookie and returns the cookies value, if no cookies it returns blank ""
      get: function(c_name) {
        if (document.cookie.length > 0) {
          var c_start = document.cookie.indexOf(c_name + "=");
          if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            var c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1) {
              c_end = document.cookie.length;
            }
            return unescape(document.cookie.substring(c_start, c_end));
          }
        }
        return "";
      },

      // this sets a cookie with your given ("cookie name", "cookie value", "good for x days")
      set: function(c_name, value, expiredays) {
        var exdate = new Date();
        if (expiredays)
          exdate.setDate(exdate.getDate() + expiredays);
        document.cookie = c_name + "=" + escape(value) + "; path=/" + "; domain=" + JS_COOKIES_DOMAIN + ((expiredays == undefined) ? "" : "; expires=" + exdate.toUTCString());
      },

      // this checks to see if a cookie exists, then returns true or false
      check: function(c_name) {
        c_name = JsCookies.get(c_name);
        if (c_name != null && c_name != "") {
          return true;
        } else {
          return false;
        }
      }

    };
  </script>

  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="https://blog.chionlab.moe/" id="logo">ChionLab</a>
      </h1>
      
        <h2 id="subtitle-wrap">
          <a href="https://blog.chionlab.moe/" id="subtitle">欢迎来到Chion82的未来道具研究所 ( ゜- ゜)つロ 乾杯~</a>
        </h2>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="https://blog.chionlab.moe/">主页</a>
        
          <a class="main-nav-link" href="https://blog.chionlab.moe/archives/">归档</a>
        
          <a class="main-nav-link" href="https://github.com/Chion82">GitHub</a>
        
          <a class="main-nav-link" href="https://blog.chionlab.moe/about.html">About Me</a>
        
        <!-- <a class="main-nav-link nav-link-switch-cdn" href="//cn2.chionlab.moe" data-domain="cn2">CN2加速</a>
        <a class="main-nav-link nav-link-switch-cdn" href="//blog.chionlab.moe" data-domain="blog">CF加速</a> -->

        
          <div style="clear: both;"></div>
          <style>
            .switch-theme-btn {
              opacity: 0.8 !important;
            }

            .switch-theme-btn:hover {
              opacity: 1.0 !important;
            }
          </style>
          <div>
            <!--
              
                <a class="main-nav-link switch-theme-btn"
                  title="uzume" href="#" style="float: left;margin-right: -10px;"
                  data-css-url="/css/style.css"
                  data-theme-name="uzume">
                  <div style="width:38px; height: 38px; overflow:hidden; border-radius:19px;">
                    <img style="width: 100%; height: 100%;" src="/images/theme_uzume.png" />
                  </div>
                </a>
              
                <a class="main-nav-link switch-theme-btn"
                  title="miria" href="#" style="float: left;margin-right: -10px;"
                  data-css-url="/stylesheets/theme_miria.css"
                  data-theme-name="miria">
                  <div style="width:38px; height: 38px; overflow:hidden; border-radius:19px;">
                    <img style="width: 100%; height: 100%;" src="/images/theme_miria.png" />
                  </div>
                </a>
              
            -->
          </div>
          <script>
            // (function(){
            //
            //   function switchThemeCSS(themeName, cssUrl) {
            //     document.querySelector('head').querySelectorAll('link[rel=stylesheet]')[1].href = cssUrl;
            //   }
            //
            //   var switchThemeBtns = document.querySelectorAll('.switch-theme-btn');
            //   for (var i=0; i<switchThemeBtns.length; i++) {
            //     var switchThemeBtn = switchThemeBtns[i];
            //     (function(switchThemeBtn) {
            //       switchThemeBtn.addEventListener('click', function(){
            //         switchThemeCSS(switchThemeBtn.dataset.themeName, switchThemeBtn.dataset.cssUrl);
            //         JsCookies.set('theme', switchThemeBtn.dataset.themeName, 30);
            //       });
            //     })(switchThemeBtn);
            //   }
            //
            //   var initTheme = JsCookies.get('theme');
            //   if (initTheme) {
            //     var cssUrl = document.querySelector(".switch-theme-btn[data-theme-name='" + initTheme + "']").dataset.cssUrl;
            //     switchThemeCSS(initTheme, cssUrl);
            //   }
            //
            // })();
          </script>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="https://blog.chionlab.moe/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="Search"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="https://google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit"></button><input type="hidden" name="sitesearch" value="https://blog.chionlab.moe"></form>
      </div>
    </div>
  </div>
  <script>
    // function getGeolocation(geoInfo) {
    //   var rootDomain = 'chionlab.moe';
    //   if (geoInfo.country_code === 'CN') {
    //     if (window.location.hostname === 'cn2' + '.' + rootDomain) {
    //       JsCookies.set('domain', 'cn2', 30);
    //       return;
    //     }
    //     $.confirm({
    //       title: '线路优化建议',
    //       content: '检测到您是境内用户，为了提高您的访问体验，是否切换到CN2线路？',
    //       buttons: {
    //         '好的': function() {
    //           JsCookies.set('domain', 'cn2', 30);
    //           window.location.href = '//' + 'cn2' + '.' + rootDomain + window.location.pathname;
    //         },
    //         '不用了': function() {
    //           JsCookies.set('domain', 'blog', 30);
    //         }
    //       }
    //     })
    //   } else {
    //     JsCookies.set('domain', 'blog', 30);
    //     if ('blog' + '.' + rootDomain !== window.location.hostname && window.location.hostname.indexOf('localhost') === -1) {
    //       window.location.href = '//' + 'blog' + '.' + rootDomain + window.location.pathname;
    //     }
    //   }
    // }
    // (function(){
    //   var rootDomain = 'chionlab.moe';
    //
    //   if (!JsCookies.check('domain')) {
    //     var geoLocationScript = document.createElement('script');
    //     geoLocationScript.setAttribute('src','//freegeoip.net/json/?callback=getGeolocation');
    //     document.head.appendChild(geoLocationScript);
    //   } else {
    //     if (JsCookies.get('domain') + '.' + rootDomain !== window.location.hostname && window.location.hostname.indexOf('localhost') === -1) {
    //       window.location.href = '//' + JsCookies.get('domain') + '.' + rootDomain + window.location.pathname;
    //     }
    //   }
    //
    //   var switchBtns = document.querySelectorAll('.nav-link-switch-cdn');
    //   for (var i=0; i<switchBtns.length; i++) {
    //     (function(switchBtn){
    //       if (switchBtn.dataset.domain === JsCookies.get('domain')) {
    //         switchBtn.style.display = 'none';
    //       }
    //       switchBtn.addEventListener('click', function(ev) {
    //         JsCookies.set('domain', switchBtn.dataset.domain);
    //       });
    //     })(switchBtns[i]);
    //   }
    // })();
  </script>
</header>

      <div class="outer">
        <section id="main"><article id="post-use-xposed-to-crawl-wechat-moments" class="article article-type-post" itemscope="" itemprop="blogPost">
  <div class="article-meta">
    <a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/" class="article-date">
  <time datetime="2016-01-22T15:38:02.000Z" itemprop="datePublished">2016-01-22</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/">开发笔记</a>►<a class="article-category-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/%E5%AE%89%E5%8D%93/">安卓</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      用Xposed框架抓取微信朋友圈数据
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <p>因微信朋友圈为私有协议，从抓包上分析朋友圈数据几乎不可能，目前也尚未找到开源的抓取朋友圈的脚本。博主于是尝试通过使用安卓下的Xposed框架实现从微信安卓版上抓取朋友圈数据。<br>本文针对微信版本6.3.8。<br><a href="https://github.com/Chion82/WeChatMomentExport" target="_blank" rel="noopener">GitHub仓库</a></p>
<h2 id="主要思路"><a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#%E4%B8%BB%E8%A6%81%E6%80%9D%E8%B7%AF" class="headerlink" title="主要思路"></a>主要思路</h2><p>从UI获取文本信息是最为简单的方法，于是应该优先逆向UI代码部分。</p>
<h2 id="逆向微信apk"><a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#%E9%80%86%E5%90%91%E5%BE%AE%E4%BF%A1apk" class="headerlink" title="逆向微信apk"></a>逆向微信apk</h2><p>首先解包微信apk，用dex2jar反编译classes.dex，然后用JD-GUI查看jar源码。<br>当然，能看到的源码都是经过高度混淆的。但是，继承自安卓重要组件（如Activity、Service等）的类名无法被混淆，于是还是能从中看到点东西。</p>
<ol>
<li>首先定位到微信APP package。我们知道这个是<code>com.tencent.mm</code>。</li>
<li>在<code>com.tencent.mm</code>中，我们找到一个<code>ui</code>包，有点意思。</li>
<li>展开<code>com.tencent.mm.ui</code>，发现多个未被混淆的类，其中发现<code>MMBaseActivity</code>直接继承自<code>Activity</code>，<code>MMFragmentActivity</code>继承自<code>ActionBarActivity</code>，<code>MMActivity</code>继承自<code>MMFragmentActivity</code>，并且<code>MMActivity</code>是微信中大多数Activity的父类：<figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MMFragmentActivity</span></span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">ActionBarActivity</span></span></span><br><span class="line"><span class="class">  <span class="keyword">implements</span> <span class="title">SwipeBackLayout</span>.<span class="title">a</span>, <span class="title">b</span>.<span class="title">a</span> </span>{</span><br><span class="line">    ...</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">MMActivity</span></span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">MMFragmentActivity</span> </span>{</span><br><span class="line">    ...</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MMBaseActivity</span></span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">Activity</span> </span>{</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
<p>现在需要找出朋友圈的Activity，为此要用Xposed hook<code>MMActivity</code>。</p>
<h2 id="创建一个Xposed模块"><a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAXposed%E6%A8%A1%E5%9D%97" class="headerlink" title="创建一个Xposed模块"></a>创建一个Xposed模块</h2><p>参考<a href="http://forum.xda-developers.com/showthread.php?t=2709324" target="_blank" rel="noopener">[TUTORIAL]Xposed module devlopment</a>，创建一个Xposed项目。<br>简单Xposed模块的基本思想是：hook某个APP中的某个方法，从而达到读写数据的目的。<br>小编尝试hook<code>com.tencent.mm.ui.MMActivity.setContentView</code>这个方法，并打印出这个Activity下的全部TextView内容。那么首先需要遍历这个Activity下的所有TextView，遍历ViewGroup的方法参考了SO的以下代码：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getAllTextViews</span><span class="params">(<span class="keyword">final</span> View v)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ViewGroup) {</span><br><span class="line">       ViewGroup vg = (ViewGroup) v;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vg.getChildCount(); i++) {</span><br><span class="line">           View child = vg.getChildAt(i);</span><br><span class="line">           getAllTextViews(child);</span><br><span class="line">       }</span><br><span class="line">   } <span class="keyword">else</span> <span class="keyword">if</span> (v <span class="keyword">instanceof</span> TextView ) {</span><br><span class="line">       dealWithTextView((TextView)v); <span class="comment">//dealWithTextView(TextView tv)方法：打印TextView中的显示文本</span></span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>Hook<code>MMActivity.setContentView</code>的关键代码如下：<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">findAndHookMethod(<span class="string">"com.tencent.mm.ui.MMActivity"</span>, lpparam.classLoader, <span class="string">"setContentView"</span>, View.class, <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">  ...</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>在findAndHookMethod方法中，第一个参数为完整类名，第三个参数为需要hook的方法名，其后若干个参数分别对应该方法的各形参类型。在这里，<code>Activity.setContentView(View view)</code>方法只有一个类型为<code>View</code>的形参，因此传入一个<code>View.class</code>。<br>现在，期望的结果是运行时可以从Log中读取到每个Activity中的所有的TextView的显示内容。<br><strong>但是，因为View中的数据并不一定在<code>setContentView()</code>时就加载完毕，因此小编的实验结果是，log中啥都没有。</strong></p>
<h2 id="意外的收获"><a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#%E6%84%8F%E5%A4%96%E7%9A%84%E6%94%B6%E8%8E%B7" class="headerlink" title="意外的收获"></a>意外的收获</h2><p>当切换到朋友圈页面时，Xposed模块报了一个异常，异常源从<code>com.tencent.mm.plugin.sns.ui.SnsTimeLineUI</code>这个类捕捉到。从类名上看，这个很有可能是朋友圈首页的UI类。展开这个类，发现更多有趣的东西：<br>这个类下有个子类<code>a</code>(被混淆过的类名)，该子类下有个名为<code>gyO</code>的<code>ListView</code>类的实例。我们知道，<code>ListView</code>是显示列表类的UI组件，有可能就是用来展示朋友圈的列表。</p>
<h2 id="顺藤摸瓜"><a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#%E9%A1%BA%E8%97%A4%E6%91%B8%E7%93%9C" class="headerlink" title="顺藤摸瓜"></a>顺藤摸瓜</h2><p>那么，我们先要获得一个<code>SnsTimeLineUI.a.gyO</code>的实例。但是在这之前，要先获得一个<code>com.tencent.mm.plugin.sns.ui.SnsTimeLineUI.a</code>的实例。继续搜索，发现<code>com.tencent.mm.plugin.sns.ui.SnsTimeLineUI</code>有一个名为<code>gLZ</code>的<code>SnsTimeLineUI.a</code>实例，那么我们先取得这个实例。</p>
<p>经过测试，<code>com.tencent.mm.plugin.sns.ui.SnsTimeLineUI.a(boolean, boolean, String, boolean)</code>这个方法在每次初始化微信界面的时候都会被调用。因此我们将hook这个方法，并从中取得<code>gLZ</code>。<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">findAndHookMethod(<span class="string">"com.tencent.mm.plugin.sns.ui.SnsTimeLineUI"</span>, lpparam.classLoader, <span class="string">"a"</span>, <span class="keyword">boolean</span>.class, <span class="keyword">boolean</span>.class, String.class, <span class="keyword">boolean</span>.class, <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        XposedBridge.log(<span class="string">"Hooked. "</span>);</span><br><span class="line">        Object currentObject = param.thisObject;</span><br><span class="line">        <span class="keyword">for</span> (Field field : currentObject.getClass().getDeclaredFields()) { <span class="comment">//遍历类成员</span></span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Object value = field.get(currentObject);</span><br><span class="line">            <span class="keyword">if</span> (field.getName().equals(<span class="string">"gLZ"</span>)) {</span><br><span class="line">                XposedBridge.log(<span class="string">"Child A found."</span>);</span><br><span class="line">                childA = value;</span><br><span class="line">                <span class="comment">//这里获得了gLZ</span></span><br><span class="line">                ...</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>现在取得了<code>SnsTimeLineUI.a</code>的一个实例<code>gLZ</code>，需要取得这个类下的<code>ListView</code>类型的<code>gyO</code>属性。<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dealWithA</span><span class="params">()</span> <span class="keyword">throws</span> Throwable</span>{</span><br><span class="line">    <span class="keyword">if</span> (childA == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (Field field : childA.getClass().getDeclaredFields()) { <span class="comment">//遍历属性</span></span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Object value = field.get(childA);</span><br><span class="line">        <span class="keyword">if</span> (field.getName().equals(<span class="string">"gyO"</span>)) {  <span class="comment">//取得了gyO</span></span><br><span class="line">            ViewGroup vg = (ListView)value;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vg.getChildCount(); i++) {  <span class="comment">//遍历这个ListView的每一个子View</span></span><br><span class="line">                ...</span><br><span class="line">                View child = vg.getChildAt(i);</span><br><span class="line">                getAllTextViews(child); <span class="comment">//这里调用上文的getAllTextViews()方法，每一个子View里的所有TextView的文本</span></span><br><span class="line">                ...</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>现在已经可以将朋友圈页面中的全部文字信息打印出来了。我们需要根据TextView的子类名判断这些文字是朋友圈内容、好友昵称、点赞或评论等。<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dealWithTextView</span><span class="params">(TextView v)</span> </span>{</span><br><span class="line">        String className = v.getClass().getName();</span><br><span class="line">        String text = ((TextView)v).getText().toString().trim().replaceAll(<span class="string">"\n"</span>, <span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">if</span> (!v.isShown())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (text.equals(<span class="string">""</span>))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (className.equals(<span class="string">"com.tencent.mm.plugin.sns.ui.AsyncTextView"</span>)) {</span><br><span class="line">            <span class="comment">//好友昵称</span></span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (className.equals(<span class="string">"com.tencent.mm.plugin.sns.ui.SnsTextView"</span>)) {</span><br><span class="line">            <span class="comment">//朋友圈文字内容</span></span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (className.equals(<span class="string">"com.tencent.mm.plugin.sns.ui.MaskTextView"</span>)) {</span><br><span class="line">            <span class="keyword">if</span> (!text.contains(<span class="string">":"</span>)) {</span><br><span class="line">                <span class="comment">//点赞</span></span><br><span class="line">                ...</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">//评论</span></span><br><span class="line">                ...</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p></p>
<p>自此，我们已经从微信APP里取得了朋友圈数据。当然，这部分抓取代码需要定时执行。因为从<code>ListView</code>中抓到的数据只有当前显示在屏幕上的可见部分，为此需要每隔很短一段时间再次执行，让用户在下滑加载的过程中抓取更多数据。<br>剩下的就是数据分类处理和格式化输出到文件，受本文篇幅所限不再赘述，详细实现可参考作者GitHub上的源码。</p>

      
    </div>
    <footer class="article-footer">
      <a data-url="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/" data-id="cjh4y6u6a001wz42hkiwd9npx" class="article-share-link">分享</a>
      
        <a href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/#gitment-comments" class="article-comment-link">评论</a>
      
      
  <ul class="article-tag-list"><li class="article-tag-list-item"><a class="article-tag-list-link" href="https://blog.chionlab.moe/tags/android/">android</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="https://blog.chionlab.moe/tags/hack/">hack</a></li></ul>

    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="https://blog.chionlab.moe/2016/01/23/tldr-man-page/" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Newer</strong>
      <div class="article-nav-title">
        
          tldr - 懒人的man page
        
      </div>
    </a>
  
  
    <a href="https://blog.chionlab.moe/2016/01/22/python2.7-on-centos6/" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Older</strong>
      <div class="article-nav-title">在CentOS6上编译安装Python2.7</div>
    </a>
  
</nav>

  
</article>


<section id="gitment-comments"><div lang="en-US" class="gitment-container gitment-root-container"><div><div lang="en-US" class="gitment-container gitment-header-container"><span class="gitment-header-like-btn">
    <svg class="gitment-heart-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50"><path d="M25 39.7l-.6-.5C11.5 28.7 8 25 8 19c0-5 4-9 9-9 4.1 0 6.4 2.3 8 4.1 1.6-1.8 3.9-4.1 8-4.1 5 0 9 4 9 9 0 6-3.5 9.7-16.4 20.2l-.6.5zM17 12c-3.9 0-7 3.1-7 7 0 5.1 3.2 8.5 15 18.1 11.8-9.6 15-13 15-18.1 0-3.9-3.1-7-7-7-3.5 0-5.4 2.1-6.9 3.8L25 17.1l-1.1-1.3C22.4 14.1 20.5 12 17 12z"></path></svg>
    Like
    
  </span><span>
    
  </span><a class="gitment-header-issue-link" href="https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/undefined" target="_blank">Issue Page</a></div></div><div><div lang="en-US" class="gitment-container gitment-comments-container"><div class="gitment-comments-error">Error: Comments Not Initialized</div></div></div><div><div lang="en-US" class="gitment-container gitment-editor-container">
      <a class="gitment-editor-avatar" href="https://github.com/login/oauth/authorize?scope=public_repo&amp;redirect_uri=https%3A%2F%2Fblog.chionlab.moe%2F2016%2F01%2F22%2Fuse-xposed-to-crawl-wechat-moments%2F&amp;client_id=3d49c913e74f56758d07&amp;client_secret=35dde7b9a07307660ca366a195434c19c076c7df" title="login with GitHub">
              <svg class="gitment-github-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50"><path d="M25 10c-8.3 0-15 6.7-15 15 0 6.6 4.3 12.2 10.3 14.2.8.1 1-.3 1-.7v-2.6c-4.2.9-5.1-2-5.1-2-.7-1.7-1.7-2.2-1.7-2.2-1.4-.9.1-.9.1-.9 1.5.1 2.3 1.5 2.3 1.5 1.3 2.3 3.5 1.6 4.4 1.2.1-1 .5-1.6 1-2-3.3-.4-6.8-1.7-6.8-7.4 0-1.6.6-3 1.5-4-.2-.4-.7-1.9.1-4 0 0 1.3-.4 4.1 1.5 1.2-.3 2.5-.5 3.8-.5 1.3 0 2.6.2 3.8.5 2.9-1.9 4.1-1.5 4.1-1.5.8 2.1.3 3.6.1 4 1 1 1.5 2.4 1.5 4 0 5.8-3.5 7-6.8 7.4.5.5 1 1.4 1 2.8v4.1c0 .4.3.9 1 .7 6-2 10.2-7.6 10.2-14.2C40 16.7 33.3 10 25 10z"></path></svg>
            </a>
    
    <div class="gitment-editor-main">
      <div class="gitment-editor-header">
        <nav class="gitment-editor-tabs">
          <button class="gitment-editor-tab gitment-selected">Write</button>
          <button class="gitment-editor-tab">Preview</button>
        </nav>
        <div class="gitment-editor-login">
          <a class="gitment-editor-login-link" href="https://github.com/login/oauth/authorize?scope=public_repo&amp;redirect_uri=https%3A%2F%2Fblog.chionlab.moe%2F2016%2F01%2F22%2Fuse-xposed-to-crawl-wechat-moments%2F&amp;client_id=3d49c913e74f56758d07&amp;client_secret=35dde7b9a07307660ca366a195434c19c076c7df">Login</a> with GitHub
        </div>
      </div>
      <div class="gitment-editor-body">
        <div class="gitment-editor-write-field">
          <textarea placeholder="Leave a comment" title="Login to Comment" disabled=""></textarea>
        </div>
        <div class="gitment-editor-preview-field gitment-hidden">
          <div class="gitment-editor-preview gitment-markdown"></div>
        </div>
      </div>
    </div>
    <div class="gitment-editor-footer">
      <a class="gitment-editor-footer-tip" href="https://guides.github.com/features/mastering-markdown/" target="_blank">
        Styling with Markdown is supported
      </a>
      <button class="gitment-editor-submit" title="Login to Comment" disabled="">Comment</button>
    </div>
  </div></div><div><div lang="en-US" class="gitment-container gitment-footer-container">
    Powered by
    <a class="gitment-footer-project-link" href="https://github.com/imsun/gitment" target="_blank">
      Gitment
    </a>
  </div></div></div></section>
<script>
var gitment = new Gitment({
  id: 'use-xposed-to-crawl-wechat-moments',
  owner: 'Chion82',
  repo: 'Chion82.github.io',
  oauth: {
    client_id: '3d49c913e74f56758d07',
    client_secret: '35dde7b9a07307660ca366a195434c19c076c7df'
  }
});

gitment.render('gitment-comments');
</script>



<section id="disqus-comments" class="disqus-comments-section">
  <div id="disqus_thread"><iframe id="dsq-app4830" name="dsq-app4830" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/saved_resource.html" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 1820px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>
</section>

</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">分类</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/OSX/">OSX</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/OpenWRT/">OpenWRT</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/linux/">linux</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/">前端</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF/">后端</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/">开发笔记</a><ul class="category-list-child"><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Python/">Python</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/%E5%AE%89%E5%8D%93/">安卓</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BB%9C/">网络</a></li></ul></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E8%BF%90%E7%BB%B4/">运维</a></li><li class="category-list-item"><a class="category-list-link" href="https://blog.chionlab.moe/categories/%E9%80%86%E5%90%91/">逆向</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签</h3>
    <div class="widget">
      <ul class="tag-list"><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/OSX/">OSX</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/React/">React</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/android/">android</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/backend/">backend</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/crawler/">crawler</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/front-end/">front-end</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/hack/">hack</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/linux/">linux</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/maintenance/">maintenance</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/network/">network</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/nginx/">nginx</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/openwrt/">openwrt</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/python/">python</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/router/">router</a></li><li class="tag-list-item"><a class="tag-list-link" href="https://blog.chionlab.moe/tags/wechat/">wechat</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">标签云</h3>
    <div class="widget tagcloud">
      <a href="https://blog.chionlab.moe/tags/OSX/" style="font-size: 11.67px;">OSX</a> <a href="https://blog.chionlab.moe/tags/React/" style="font-size: 15px;">React</a> <a href="https://blog.chionlab.moe/tags/android/" style="font-size: 13.33px;">android</a> <a href="https://blog.chionlab.moe/tags/backend/" style="font-size: 11.67px;">backend</a> <a href="https://blog.chionlab.moe/tags/crawler/" style="font-size: 11.67px;">crawler</a> <a href="https://blog.chionlab.moe/tags/front-end/" style="font-size: 18.33px;">front-end</a> <a href="https://blog.chionlab.moe/tags/hack/" style="font-size: 13.33px;">hack</a> <a href="https://blog.chionlab.moe/tags/linux/" style="font-size: 20px;">linux</a> <a href="https://blog.chionlab.moe/tags/maintenance/" style="font-size: 18.33px;">maintenance</a> <a href="https://blog.chionlab.moe/tags/network/" style="font-size: 16.67px;">network</a> <a href="https://blog.chionlab.moe/tags/nginx/" style="font-size: 11.67px;">nginx</a> <a href="https://blog.chionlab.moe/tags/openwrt/" style="font-size: 10px;">openwrt</a> <a href="https://blog.chionlab.moe/tags/python/" style="font-size: 11.67px;">python</a> <a href="https://blog.chionlab.moe/tags/router/" style="font-size: 10px;">router</a> <a href="https://blog.chionlab.moe/tags/wechat/" style="font-size: 11.67px;">wechat</a>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">归档</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2018/03/">March 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2018/02/">February 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2017/04/">April 2017</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/12/">December 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/11/">November 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/09/">September 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/08/">August 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/07/">July 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/04/">April 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/03/">March 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/02/">February 2016</a></li><li class="archive-list-item"><a class="archive-list-link" href="https://blog.chionlab.moe/archives/2016/01/">January 2016</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">最近发表</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="https://blog.chionlab.moe/2018/03/31/full-cone-nat-with-linux-2/">Linux 内核态实现 Full Cone NAT（2）</a>
          </li>
        
          <li>
            <a href="https://blog.chionlab.moe/2018/02/09/full-cone-nat-with-linux/">从DNAT到netfilter内核子系统，浅谈Linux的Full Cone NAT实现</a>
          </li>
        
          <li>
            <a href="https://blog.chionlab.moe/2017/04/06/kcptun-with-fake-tcp/">kcptun-raw：应对UDP QoS，重新实现kcptun的一次尝试</a>
          </li>
        
          <li>
            <a href="https://blog.chionlab.moe/2016/12/21/universal-react-app-reuse-effects-on-server-side/">再谈React同构应用：服务端下复用Redux Effects的实践</a>
          </li>
        
          <li>
            <a href="https://blog.chionlab.moe/2016/12/12/chionlab-updates-dec-2016/">ChionLab 2016年底更新记录</a>
          </li>
        
      </ul>
    </div>
  </div>


  
    <div class="widget-wrap">
  <h3 class="widget-title">友链</h3>
  <div class="widget">
    <a href="https://www.starduster.me/" target="_blank">星尘独奏曲</a><br>
    <a href="http://www.zhouchao.me/" target="_blank">chao's blog</a><br>
    <a href="http://ilazycat.com/" target="_blank">小黑猫菊苣的猫窝</a><br>
    <a href="https://loli.be/" target="_blank">Mashiro's Blog</a><br>
    <a href="https://bismarck.moe/" target="_blank">雨宫千鹤的博客</a><br>
    <a href="https://blessing.studio/" target="_blank">Blessing Studio</a><br>
    <a href="https://wwww.lvmoo.com/" target="_blank">凯の秘密基地</a><br>
    <a href="https://apporz.com/" target="_blank">Micooz's Personal Site</a><br>
    <a href="https://stefenson.github.io/" target="_blank">Stefenson's Blog</a><br>
    <a href="https://sunskyxh.github.io/" target="_blank">香香鸡的小窝</a>
  </div>
</div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      © 2018 Chion Tang<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>, themed &amp; customized by Chion
    </div>
  </div>
</footer>

    </div>
    <nav id="mobile-nav">
  
    <a href="https://blog.chionlab.moe/" class="mobile-nav-link">主页</a>
  
    <a href="https://blog.chionlab.moe/archives/" class="mobile-nav-link">归档</a>
  
    <a href="https://github.com/Chion82" class="mobile-nav-link">GitHub</a>
  
    <a href="https://blog.chionlab.moe/about.html" class="mobile-nav-link">About Me</a>
  
</nav>
    
<script>
  var disqus_shortname = 'chionlab';
  if (/*window.location.hostname.indexOf('cn2') === -1*/true) {
    
    var disqus_url = 'https://blog.chionlab.moe/2016/01/22/use-xposed-to-crawl-wechat-moments/';
    
    (function(){
      var dsq = document.createElement('script');
      dsq.type = 'text/javascript';
      dsq.async = true;
      dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function(){
      var dsq = document.createElement('script');
      dsq.type = 'text/javascript';
      dsq.async = true;
      dsq.src = '//' + disqus_shortname + '.disqus.com/count.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
  } else {
    var disqusElements = document.querySelectorAll('.disqus-comments-section, .disqus-comment-link');
    for (var i=0; i<disqusElements.length; i++) {
      disqusElements[i].style.display = 'none';
    }
  }
</script>



  <link rel="stylesheet" href="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/jquery.fancybox.css">
  <script src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/jquery.fancybox.pack.js"></script>


<script src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/script.js"></script>

  </div>

<iframe style="display: none;" src="./用Xposed框架抓取微信朋友圈数据 _ ChionLab_files/saved_resource(1).html"></iframe></body><div id="cye-workaround-body" style="position: absolute; left: 0px; top: 0px; z-index: -2147483646; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(238, 238, 238); height: 5202px; width: 1341px;"></div><div id="cye-workaround-body-image" style="position: absolute; left: 0px; top: 0px; z-index: -2147483645; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); height: 5202px; width: 1341px;"></div></html>