<!DOCTYPE html>
<!-- saved from url=(0075)https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/ -->
<html lang="en-US" prefix="og: http://ogp.me/ns#" class="cye-disabled cye-nm js csstransforms3d csstransitions whatinput-types-initial gr__pyimagesearch_com wf-lato-n8-active wf-lato-n5-active wf-lato-n4-active wf-lato-n7-active wf-active wf-opensans-n4-active wf-opensans-n7-active wf-opensans-n5-active wf-breeserif-n4-active whatinput-types-mouse" style="" data-whatinput="mouse" data-whatintent="mouse"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/form"></script><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/visit"></script><link rel="stylesheet" type="text/css" href="./Neural Style Transfer with OpenCV - PyImageSearch_files/f10f9.css" media="all">




<!-- <link rel="stylesheet" type="text/css" href="https://www.pyimagesearch.com/static/css/header_fix.css" media="all"/> -->
<link rel="pingback" href="https://www.pyimagesearch.com/xmlrpc.php">
<link rel="shortcut icon" href="https://www.pyimagesearch.com/wp-content/themes/canvas/favicon.ico">

<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport">

<!-- This site is optimized with the Yoast SEO plugin v7.0.3 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Neural Style Transfer with OpenCV - PyImageSearch</title>
<meta name="description" content="In this guide you will learn how to apply Neural Style Transfer with OpenCV and Python to both images and video streams.">
<link rel="canonical" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Neural Style Transfer with OpenCV - PyImageSearch">
<meta property="og:description" content="In this guide you will learn how to apply Neural Style Transfer with OpenCV and Python to both images and video streams.">
<meta property="og:url" content="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/">
<meta property="og:site_name" content="PyImageSearch">
<meta property="article:tag" content="convolutional neural network">
<meta property="article:tag" content="deep learning">
<meta property="article:tag" content="neural nets">
<meta property="article:tag" content="neural style transfer">
<meta property="article:section" content="Deep Learning">
<meta property="article:published_time" content="2018-08-27T10:00:08-04:00">
<meta property="article:modified_time" content="2019-02-04T10:15:57-04:00">
<meta property="og:updated_time" content="2019-02-04T10:15:57-04:00">
<meta property="og:image" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-neural-style/neural_style_transfer_animation.gif">
<meta property="og:image:secure_url" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-neural-style/neural_style_transfer_animation.gif">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_example.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_example.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_gatys.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_gatys.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output02.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output02.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output03.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output03.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output04.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output04.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/static/templates/deep-learning-for-computer-vision/images/featured_deep_dreaming.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/static/templates/deep-learning-for-computer-vision/images/featured_deep_dreaming.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/01/dl4cv_trusted_by_cover.png">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/01/dl4cv_trusted_by_cover.png">
<!-- / Yoast SEO plugin. -->

<link rel="dns-prefetch" href="https://a.optmnstr.com/">
<link rel="dns-prefetch" href="https://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Feed" href="http://feeds.feedburner.com/Pyimagesearch">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Comments Feed" href="https://www.pyimagesearch.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Neural Style Transfer with OpenCV Comments Feed" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/feed/">
		<div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/fbevents.js"></script><script type="text/javascript" async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/54220efd7ab7f03f7e000043.js"></script><script type="text/javascript" async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/4768429.js"></script><script async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/analytics.js"></script><script type="text/javascript" async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/mixpanel-2-latest.min.js"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.pyimagesearch.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.9.4"}};
			!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55357,56692,8205,9792,65039],[55357,56692,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><style id="nightModeStyle">
html.cye-enabled.cye-nm:not(*:-webkit-full-screen) body,
 html.cye-enabled.cye-nm:not(*:-webkit-full-screen) #cye-workaround-body {-webkit-filter:contrast(91%) brightness(84%) invert(1);}</style><style id="cyebody">html.cye-enabled.cye-lm body{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyediv">html.cye-enabled.cye-lm div{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyetable">html.cye-enabled.cye-lm th{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}html.cye-enabled.cye-lm td{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyetextInput">html.cye-enabled.cye-lm input[type=text]{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}html.cye-enabled.cye-lm textarea{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeselect">html.cye-enabled.cye-lm select{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeul">html.cye-enabled.cye-lm ul{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style><style id="cyeChangeByClick">html.cye-enabled.cye-lm .cye-lm-tag,html.cye-enabled.cye-lm.cye-lm-tag{background-color:#c9e5cc !important;border-color:rgb(50, 57, 51) !important;color:#000000  !important}</style>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>









<!--[if lt IE 9]>
<link href="https://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/df983.js"></script>


<script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"https:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/49ed6.js"></script>

<script type="text/javascript" data-cfasync="false" id="omapi-script" async="async" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/api.min.js"></script>
<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/83e7b.js"></script><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style>



<link rel="https://api.w.org/" href="https://www.pyimagesearch.com/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.pyimagesearch.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.pyimagesearch.com/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 4.9.4">
<link rel="shortlink" href="https://www.pyimagesearch.com/?p=8563">
<link rel="alternate" type="application/json+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2018%2F08%2F27%2Fneural-style-transfer-with-opencv%2F">
<link rel="alternate" type="text/xml+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2018%2F08%2F27%2Fneural-style-transfer-with-opencv%2F&amp;format=xml">

<!-- Theme version -->
<meta name="generator" content="Canvas 5.5.7">
<meta name="generator" content="WooFramework 5.5.5">

<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>
<!-- Options Panel Custom CSS -->
<style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #DF4B4B;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #DF4B4B;}

/* Hide the header/footer on almost finished pages */
.page-id-365 #header, .page-id-365 #nav-container, .page-id-365 #footer-container{display: none;}
.page-id-4031 #header, .page-id-4031 #nav-container, .page-id-4031 #footer-container{display: none;}
.page-id-365 #content{padding-top: 30px;}
.page-id-4031 #content{padding-top: 30px;}
.page-id-5289 #header, .page-id-5289 #nav-container, .page-id-5289 #footer-container{display: none;}
.page-id-5289 #content{padding-top: 30px;}

/* Hide the header/footer on confirmation pages */
.page-id-1397 #header, .page-id-1397 #nav-container, .page-id-1397 #footer-container{display: none;}
.page-id-1382 #header, .page-id-1382 #nav-container, .page-id-1382 #footer-container{display: none;}
.page-id-1481 #header, .page-id-1481 #nav-container, .page-id-1481 #footer-container{display: none;}
.page-id-3200 #header, .page-id-3200 #nav-container, .page-id-3200 #footer-container{display: none;}
.page-id-4038 #header, .page-id-4038 #nav-container, .page-id-4038 #footer-container{display: none;}
.page-id-5278 #header, .page-id-5278 #nav-container, .page-id-5278 #footer-container{display: none;}
.page-id-8101 #header, .page-id-8101 #nav-container, .page-id-8101 #footer-container{display: none;}
.page-id-1397 #content, .page-id-1382 #content, .page-id-1481 #content, .page-id-4038 #content, .page-id-5278 #content, .page-id-8101 #content{padding-top: 30px;}

/* Manipulate content on 'Let me show you...' page */
.page-id-3200 #content{padding-top: 15px;}
.page-id-3200 #content h1.title{display: none;}
.page-id-3200 #content .entry h1{font-size: 32px;}

/* Add margin to bottom of LaTeX equations, but only when they are not in paragraphs */
section.entry .latex{margin-bottom: 15px;}
section.entry p .latex{margin-bottom: 0px;}

/* Fix list specific issues on the "Start Here" page */
.page-id-4374 #start_here_benefits li{margin-bottom: 15px;}

/* Fix search icon */
button.icon-search.submit{margin-top: -7px;}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->

<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>

<!-- start Mixpanel -->
<script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("2486e0f021e92605d44d32fce5f1d826");
</script>
<!-- end Mixpanel -->

<style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><meta class="foundation-mq"><script src="./Neural Style Transfer with OpenCV - PyImageSearch_files/webfont.js" async=""></script><script src="./Neural Style Transfer with OpenCV - PyImageSearch_files/analytics.js" async=""></script><link rel="stylesheet" href="./Neural Style Transfer with OpenCV - PyImageSearch_files/css" media="all"><link rel="stylesheet" href="./Neural Style Transfer with OpenCV - PyImageSearch_files/css(1)" media="all"><script type="text/javascript" async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/tagjs"></script><style type="text/css">
  /* === Form-Specific Styles === */
  /* stylelint-disable */

  #drip-129969 .drip-content,
  #drip-129969 .drip-header {
    background: rgb(223,75,75) !important;
    background: rgba(223,75,75,0.90) !important;
  }

  #drip-129969 .drip-content h3 {
    color: #e56f6f !important;
    font-size: 23px !important;
  }

  #drip-129969 .drip-submit-button {
    background-color: #e56f6f !important;
    font-size: 13px !important;
  }

  #drip-129969 .drip-submit-button:hover {
    background-color: #e25d5d !important;
  }

  #drip-129969 .drip-submit-button:active {
    background-color: #c94444 !important;
  }

  #drip-129969 dl dt,
  #drip-129969 .drip-content .drip-description,
  #drip-129969 .drip-content .classic--checkbox,
  #drip-129969 .drip-errors {
    font-size: 14px !important;
  }

  #drip-129969 .drip-text-field {
    font-size: 15px !important;
  }

  /* === Reset styles === */

  .drip-tab h1,
  .drip-tab h2,
  .drip-tab h3,
  .drip-tab div,
  .drip-tab dl,
  .drip-tab dt,
  .drip-tab dd,
  .drip-tab p,
  .drip-tab a,
  .drip-tab .drip-text-field,
  .drip-tab .drip-text-field:focus,
  .drip-tab .drip-submit-button {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    float: none;
    width: auto;
    background-image: none;
    letter-spacing: 0;
    -webkit-box-shadow: none;
       -moz-box-shadow: none;
            box-shadow: none;
    -webkit-text-shadow: none !important;
       -moz-text-shadow: none !important;
            text-shadow: none !important;
  }

  .drip-tab a {
    text-decoration: none;
  }

  .drip-tab :focus {
    outline: 0;
  }

  /* === Clearfix === */

  .drip-clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  * html .drip-clearfix             { zoom: 1; } /* IE6 */
  *:first-child+html .drip-clearfix { zoom: 1; } /* IE7 */

  /* === Main Container === */

  .drip-tab-container * {
    box-sizing: content-box;
  }

  /* === Content === */

  .drip-tab .drip-content {
    margin: 0;
    padding: 5px;
    width: 330px;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
       -moz-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
            box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
  }

  .drip-tab.bottom .drip-content {
    bottom: -800px;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom.left .drip-content {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-content {
    right: 40px;
  }

  .drip-tab.image-left .drip-content,
  .drip-tab.image-right .drip-content {
    width: 510px;
  }

  .drip-tab.side .drip-content {
    top: 10%;
  }

  .drip-tab.side.right .drip-content {
    right: -550px;
    -webkit-border-radius: 8px 0 0 8px;
       -moz-border-radius: 8px 0 0 8px;
            border-radius: 8px 0 0 8px;
    -webkit-transition: right 200ms ease-in;
       -moz-transition: right 200ms ease-in;
         -o-transition: right 200ms ease-in;
            transition: right 200ms ease-in;
  }

  .drip-tab.side.left .drip-content {
    left: -550px;
    -webkit-border-radius: 0 8px 8px 0;
       -moz-border-radius: 0 8px 8px 0;
            border-radius: 0 8px 8px 0;
    -webkit-transition: left 200ms ease-in;
       -moz-transition: left 200ms ease-in;
         -o-transition: left 200ms ease-in;
            transition: left 200ms ease-in;
  }

  .drip-tab.mobile .drip-content {
    width: 100% !important;
    bottom: -800px;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.drip-scrollable .drip-content {
    overflow-y: scroll;
  }

  /* === Header === */

  .drip-tab .drip-header {
    margin: 0;
    padding: 0;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
       -moz-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
            box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
  }

  .drip-tab.bottom .drip-header {
    width: 330px;
    bottom: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom .drip-header.drip-hidden {
    bottom: -800px;
  }

  .drip-tab.bottom.left .drip-header {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-header {
    right: 40px;
  }

  .drip-tab.bottom.image-left .drip-header,
  .drip-tab.bottom.image-right .drip-header {
    width: 510px;
  }

  .drip-tab.side .drip-header {
    width: 330px;
    top: 10%;
  }

  .drip-tab.side.right .drip-header {
    right: -100px;
    -webkit-transition: right 400ms ease-in;
       -moz-transition: right 400ms ease-in;
         -o-transition: right 400ms ease-in;
            transition: right 400ms ease-in;
    -webkit-transform: rotate(-90deg) !important;
       -moz-transform: rotate(-90deg) !important;
        -ms-transform: rotate(-90deg) !important;
         -o-transform: rotate(-90deg) !important;
            transform: rotate(-90deg) !important;
    -webkit-transform-origin: right center;
       -moz-transform-origin: right center;
         -o-transform-origin: right center;
            transform-origin: right center;
  }

  .drip-tab.side.right .drip-header.drip-hidden {
    right: -100px;
  }

  .drip-tab.side.left .drip-header {
    left: -100px;
    -webkit-transition: left 400ms ease-in;
       -moz-transition: left 400ms ease-in;
         -o-transition: left 400ms ease-in;
            transition: left 400ms ease-in;
    -webkit-transform: rotate(90deg) !important;
       -moz-transform: rotate(90deg) !important;
        -ms-transform: rotate(90deg) !important;
         -o-transform: rotate(90deg) !important;
            transform: rotate(90deg) !important;
    -webkit-transform-origin: left center;
       -moz-transform-origin: left center;
         -o-transform-origin: left center;
            transform-origin: left center;
  }

  .drip-tab.side.left .drip-header.drip-hidden {
    left: -100px;
  }

  .drip-tab.mobile .drip-header {
    width: 100% !important;
    bottom: 0;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.mobile .drip-header.drip-hidden {
    bottom: -300px;
  }

  /* === Header Toggle === */

  .drip-tab .drip-toggle {
    display: block;
    text-decoration: none;
    padding: 10px 50px 10px 20px; /* extra padding for the arrow */
  }

  /* === Teaser === */

  .drip-tab .drip-header h2 {
    display: block;
    margin: 0 !important;
    padding: 0 !important;
    border: 0 !important;
    font-size: 14px !important;
    line-height: 1.5 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #fff !important;
    clear: none !important;
    letter-spacing: 0 !important;
    width: auto !important;
  }

  /* === Arrows === */

  .drip-tab .drip-header span.drip-arrow {
    display: block;
    position: absolute;
    margin: 0;
    padding: 0;
    width: 0;
    height: 0;
    line-height: 0;
    top: 17px;
    right: 32px;
  }

  /* === Panel === */

  .drip-tab .drip-content > div.drip-panel {
    padding: 15px 15px 12px;
    background-color: #fff;
    -webkit-border-radius: 6px;
       -moz-border-radius: 6px;
            border-radius: 6px;
  }

  /* === Powered By === */

  .drip-tab .drip-powered-by {
    padding: 8px;
    margin-bottom: -5px;
    font-family: Helvetica, Arial, sans-serif;
    text-align: left;
    font-weight: bold;
    font-size: 10px;
    line-height: 16px;
    color: #ffffff;
    letter-spacing: 1px;
    text-align: center;
    text-transform: uppercase;
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .drip-tab .drip-powered-by a {
    color: #ffffff !important;
    text-decoration: underline !important;
    letter-spacing: 1px;
    margin-left: 6px;
  }

  /* === Content Headings & Paragraphs === */

  .drip-tab .drip-content h3 {
    display: block;
    margin: 0 20px 0 0 !important;
    padding: 0 0 15px 0 !important;
    line-height: 1.4 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #4477bd !important;
    clear: none !important;
  }

  .drip-tab .drip-content .drip-description {
    margin: 0;
    padding: 0 0 20px 0;
    line-height: 1.6;
    text-align: left;
  }

  .drip-tab.image-left .drip-content .drip-description {
    margin-left: 170px;
  }

  .drip-tab.image-right .drip-content .drip-description {
    margin-right: 170px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content .drip-description {
      margin-left: 0; /* 120px; */
    }

    .drip-tab.image-right .drip-content .drip-description {
      margin-right: 0; /* 120px; */
    }
  }

  .drip-tab .drip-content .drip-description a {
    text-decoration: underline;
  }

  .drip-tab .drip-content .drip-description em {
    font-style: italic;
  }

  .drip-tab .drip-content .drip-description ul,
  .drip-tab .drip-content .drip-description ol {
    list-style-position: outside;
    margin: 8px 0 8px 30px;
  }

  .drip-tab .drip-content .drip-description ul li
  .drip-tab .drip-content .drip-description ol li {
    padding: 0;
  }

  .drip-tab .drip-content img.drip-image {
    margin-bottom: 20px;
  }

  .drip-tab.image-left .drip-content img.drip-image {
    float: left;
    width: 150px;
  }

  .drip-tab.image-right .drip-content img.drip-image {
    float: right;
    width: 150px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content img.drip-image {
      margin-right: 20px;
      width: 100px;
    }

    .drip-tab.image-right .drip-content img.drip-image {
      margin-left: 20px;
      width: 100px;
    }
  }

  .drip-tab .drip-content a.drip-close {
    font-family: Arial, Helvetica, sans-serif;
    margin: -1px 0 0 0;
    float: right;
    font-size: 28px;
    line-height: 15px;
    font-weight: normal;
    color: #333;
    opacity: 0.4;
  }

  .drip-tab .drip-content a.drip-close:hover {
    text-decoration: none;
    cursor: pointer;
    opacity: 0.6;
  }

  /* === Content Subscribe Form === */

  .drip-tab form {
    margin: 0 !important;
    padding: 0 !important;
  }

  .drip-tab dl {
    display: block;
    margin: 0;
    padding: 0;
  }

  .drip-tab dl dt {
    display: block;
    padding: 0 0 5px 0;
    font-weight: bold;
  }

  .drip-tab dl.no-labels dt {
    display: none;
  }

  .drip-tab dl dd {
    display: block;
    padding: 0 0 10px 0;
  }

  .drip-tab .drip-text-field {
    margin: 0 !important;
    padding: 6px !important;
    height: auto !important;
    width: 100% !important;
    color: #333 !important;
    background-color: #fff !important;
    border: 1px solid #c4c4c4 !important;
    -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
       -moz-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
            box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
    -webkit-border-radius: 4px !important;
       -moz-border-radius: 4px !important;
            border-radius: 4px !important;
    -webkit-box-sizing: border-box !important;
       -moz-box-sizing: border-box !important;
        -ms-box-sizing: border-box !important;
            box-sizing: border-box !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
  }

  .drip-tab .drip-text-field::-webkit-input-placeholder { /* WebKit browsers */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: #999999 !important;
  }

  .drip-tab .drip-text-field:focus {
    border-color: #a4a4a4 !important;
    outline: 0;
    background-image: none;
    background-color: #fff !important;
  }

  .drip-tab.mobile .drip-text-field {
    font-size: 16px;
  }

  .drip-tab .drip-errors {
    padding: 5px 0 0 0;
    font-weight: normal;
    color: red;
  }

  .drip-tab .drip-submit-button {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
    padding: 3px 12px !important;
    color: #ffffff !important;
    font-weight: bold !important;
    line-height: 1.6 !important;
    border: 0 !important;
    -webkit-border-radius: 15px !important;
       -moz-border-radius: 15px !important;
            border-radius: 15px !important;
    cursor: pointer !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
    height: auto;
  }

  .drip-tab .drip-submit-button:hover {
    background-image: none !important;
  }

  .drip-tab .drip-submit-button:active {
    background-image: none !important;
  }

  /* checkbox */
  .drip-tab .classic--checkbox.hidden {
    margin-bottom: -8px;
    display: none;
  }

  .drip-tab .classic--checkbox input[type="checkbox"] {
    display: inline-block;
    width: auto;
  }

  /* stylelint-enable */

</style><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(1)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(2)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(3)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(4)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(5)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/saved_resource(6)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/tr" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/seg" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/tr(1)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/seg(1)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/tr(2)" width="1" height="1" border="0"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/seg(2)" width="1" height="1" border="0"><style></style></head><div id="cyeBlackMaskLayer" style="background-color: rgb(19, 19, 19); position: fixed; width: 1980px; height: 1080px; z-index: -2147483648;"></div>
<body class="post-template-default single single-post postid-8563 single-format-standard unknown alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer" data-gr-c-s-loaded="true" style="">
<div id="wrapper">

	<div id="inner-wrapper">

	    <!--#header-container-->
    <div id="header-container">
<h3 class="nav-toggle icon"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="https://www.pyimagesearch.com/" title="Be awesome at OpenCV, Python, deep learning, and computer vision"><img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/logo.png" alt="PyImageSearch"></a>
<span class="site-title"><a href="https://www.pyimagesearch.com/">PyImageSearch</a></span>
<span class="site-description">Be awesome at OpenCV, Python, deep learning, and computer vision</span>
</div>

	</header>

	    </div><!--/#header-container-->
    <!--#nav-container-->
    <div id="nav-container">
<nav id="navigation" class="col-full" role="navigation">

	<section class="menus">

		<a href="https://www.pyimagesearch.com/" class="nav-home"><span>Home</span></a>

	<h3>Main Menu</h3><ul id="main-nav" class="nav fl"><li id="menu-item-4519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4519"><a href="https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/">Start Here</a></li>
<li id="menu-item-2616" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2616"><a href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li>
<li id="menu-item-2617" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2617"><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus</a></li>
<li id="menu-item-2615" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2615"><a href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV 3 &amp; 4 Tutorials</a></li>
<li id="menu-item-9774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9774"><a href="https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/">FREE Crash Course</a></li>
<li id="menu-item-2619" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2619"><a href="https://www.pyimagesearch.com/about/">About</a></li>
<li id="menu-item-6744" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6744"><a href="https://www.pyimagesearch.com/contact/">Contact</a></li>
</ul>
	</section><!-- /.menus -->

	<a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#top" class="nav-close"><span>Return to Content</span></a>

</nav>
    </div><!--/#nav-container-->
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-8563 post type-post status-publish format-standard hentry category-deep-learning-2 category-tutorials tag-convolutional-neural-network tag-deep-learning tag-neural-nets tag-neural-style-transfer">
	<header>
	<h1 class="title">Neural Style Transfer with OpenCV</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="https://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> <span class="small">on</span> <abbr class="date time published" title="2018-08-27T10:00:08-0400">August 27, 2018</abbr>  <span class="small">in</span> <span class="categories"><a href="https://www.pyimagesearch.com/category/deep-learning-2/" title="View all items in Deep Learning">Deep Learning</a>, <a href="https://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span>  
</div> <!-- Close out Post Meta div -->

<div id="pyis-optinmonster-sticky-anchor"></div>

<div id="pyis-optinmonster-sticky-bar" data-sticky-container="" class="sticky-container" style="height: 75.25px;">

	<div class="sticky is-at-top is-stuck" data-sticky="z7f59e-sticky" data-options="topAnchor: pyis-optinmonster-sticky-anchor:top; marginTop: 0; stickyOn: small;" data-resize="vdiwb1-sticky" data-mutate="vdiwb1-sticky" data-events="mutate" style="max-width: 622.938px; margin-top: 0em; bottom: auto; top: 0px;">
		
		<a href="https://app.monstercampaigns.com/c/tortsem7qkvyuxc4cyfi/" id="pyis-optinmonster-open-modal" data-optin-slug="tortsem7qkvyuxc4cyfi">
			
			<img src="./Neural Style Transfer with OpenCV - PyImageSearch_files/python_icon.png" alt="Python File Icon">
			
			<span class="link-text">
			
				Click here to download the source code to this post				
			</span>
			
			<div class="clearfix"></div>
			
		</a>
		
	</div>
	
<!-- Our div gets closed out by the one originally intended for Post Meta --></div>
	<section class="entry">
<p><img class="aligncenter" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_animation.gif" alt="" width="500"></p>
<p>In this tutorial, you will learn how to apply neural style transfer to both images and real-time video using OpenCV, Python, and deep learning. By the end of this guide, you’ll be able to generate beautiful works of art with neural style transfer.</p>
<p>The original neural style transfer algorithm was introduced by Gatys et al. in their 2015 paper, <a href="https://arxiv.org/abs/1508.06576" target="_blank" rel="noopener"><em>A Neural Algorithm of Artistic Style</em></a> (in fact, this is the exact algorithm that I teach you how to implement and train from scratch inside <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>).</p>
<p>In 2016, Johnson et al. published <a href="https://cs.stanford.edu/people/jcjohns/eccv16/" target="_blank" rel="noopener"><em>Perceptual Losses for Real-Time Style Transfer and Super- Resolution</em></a>, which frames neural style transfer as a super-resolution-like problem using perceptual loss. The end result is a neural style transfer algorithm which is up to <em>three orders of magnitude faster</em> than the Gatys et al. method (there are a few downsides though and I’ll be discussing them later in the guide).</p>
<p>In the rest of this post you will learn how to apply the neural style transfer algorithm to your own images and video streams.</p>
<p><strong>To learn how to apply neural style transfer using OpenCV and Python, <em>just keep reading!</em></strong></p>
<div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url(&#39;https://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png&#39;); background-size: 70px 70px; background-repeat: no-repeat;">
<p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br>
<a id="scroll_to_code" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#">Jump right to the downloads section.</a></p>
</div>
<h2>Neural Style Transfer with OpenCV</h2>
<p><iframe width="500" height="375" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/DRpydtvjGdE.html" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></p>
<p>In the remainder of today’s guide I will be demonstrating how you can apply the neural style transfer algorithm using OpenCV and Python to generate your own works of art.</p>
<p>The method I’m discussing here today is capable of running in near real-time on a CPU and is fully capable of obtaining super real-time performance on your GPU.</p>
<p>We’ll start with a brief discussion of neural style transfer, including what it is and how it works.</p>
<p>From there we’ll utilize OpenCV and Python to actually apply neural style transfer.</p>
<h3>What is neural style transfer?</h3>
<div id="attachment_8569" style="max-width: 610px" class="wp-caption aligncenter"><a href="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_example.jpg"><img class="wp-image-8569" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_example.jpg" alt="" width="600" height="158" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_example.jpg 1000w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_example-300x79.jpg 300w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_example-768x202.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a><p class="wp-caption-text"><strong>Figure 1:</strong> Neural style transfer with OpenCV example. Our content image <em>(left)</em>. Style image <em>(middle)</em>. Stylized output <em>(right)</em>.</p></div>
<p>Neural style transfer is the process of:</p>
<ol>
<li>Taking the style of one image</li>
<li>And then applying it to the content of another image</li>
</ol>
<p>An example of the neural style transfer process can be seen in <strong>Figure 1</strong>. On the <strong><em>left</em></strong> we have our content image — a serene view of myself enjoying a beer on top of a mountain in the Black Forest of Germany, overlooking the town of Baden.</p>
<p>In the <em><strong>middle</strong></em> is our style image, <a href="https://en.wikipedia.org/wiki/Vincent_van_Gogh" target="_blank" rel="noopener">Vincent van Gogh’s</a> famous <em>The Starry Night</em>.</p>
<p>And on the <em><strong>right</strong></em> is the output of applying the style of van Gogh’s Starry Night to the content of my photo of Germany’s Black Forest. Notice how we have retained the content of the rolling hills, forest, myself, and even the beers, but have applied the style of Starry Night — it’s as if Van Gogh had applied his masterful paint strokes to our scenic view!</p>
<p>The question is, how do we define a neural network to perform neural style transfer?</p>
<p>Is that even possible?</p>
<p>You bet it is — and we’ll be discussing how neural style transfer is made possible in the next section.</p>
<h3>How does neural style transfer work?</h3>
<div id="attachment_8570" style="max-width: 610px" class="wp-caption aligncenter"><a href="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_gatys.jpg"><img class="size-full wp-image-8570" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_gatys.jpg" alt="" width="600" height="417" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_gatys.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_gatys-300x209.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a><p class="wp-caption-text"><strong>Figure 2:</strong>&nbsp;Neural Style Transfer with OpenCV possible (Figure 1 of&nbsp;<a href="https://arxiv.org/abs/1508.06576" target="_blank" rel="noopener">Gatys et. al. 2015</a>).</p></div>
<p>At this point you’re probably scratching your head and thinking something along the lines of: <em>“How do we define a neural network to perform style transfer?”</em></p>
<p>Interestingly, the <a href="https://arxiv.org/abs/1508.06576" target="_blank" rel="noopener">original 2015 paper by Gatys et al.</a> proposed a neural style transfer algorithm that <em>does not</em> require a new architecture at all. Instead, we can take a pre-trained network (typically on ImageNet) and define a loss function that will enable us to achieve our end goal of style transfer and then optimize over that loss function.</p>
<p><strong>Therefore, the question isn’t <em>“What neural network do we use?”</em> but rather <em>“What loss function do we use?”</em></strong></p>
<p>The answer is a three-component loss function, including:</p>
<ol>
<li>Content loss</li>
<li>Style loss</li>
<li>Total-variation loss</li>
</ol>
<p>Each component is individually computed and then combined in a single meta-loss function. By minimizing the meta-loss function we will be in turn jointly optimizing the content, style, and total-variation loss as well.</p>
<p>While the Gatys et al. method produced beautiful neural style transfer results, the problem was that it was quite slow.</p>
<p><a href="https://cs.stanford.edu/people/jcjohns/eccv16/" target="_blank" rel="noopener">Johnson et al. (2016)</a> built on the work of Gatys et al., proposing a neural style transfer algorithm that is up to three orders of magnitude faster. The Johnson et al. method frames neural style transfer as a super-resolution-like problem based on perceptual loss functions.</p>
<p>While the Johnson et al. method is certainly fast, <strong>the biggest downside is that you <em>cannot</em> arbitrarily select your style images like you could in the Gatys et al. method.</strong></p>
<p>Instead, you first need to <em>explicitly train</em> a network to <em>reproduce</em> the style of your desired image. Once the network is trained, you can then apply it to any content image you wish. You should see the Johnson et al. method as a more of an “investment” in your style image — you better like your style image as you’ll be training your own network to reproduce its style on content images.</p>
<p>Johnson et al. provide documentation on how to train your own neural style transfer models on their <a href="https://github.com/jcjohnson/fast-neural-style" target="_blank" rel="noopener">official GitHub page</a>.</p>
<p>Finally, it’s also worth noting that that in Ulyanov et al.’s 2017 publication, <a href="https://arxiv.org/abs/1607.08022" target="_blank" rel="noopener"><em>Instance Normalization: The Missing Ingredient for Fast Stylization</em></a>, it was found that swapping batch normalization for instance normalization (and applying instance normalization at both training and testing), leads to even faster real-time performance and arguably more aesthetically pleasing results as well.</p>
<p>I have included both the models used by Johnson et al. in their ECCV paper along with the Ulyanov et al. models in the <em><strong>“Downloads”</strong></em> section of this post — be sure to download them so you can follow along with the remainder of this guide.</p>
<p>And if you’re interested in learning more about how neural style transfer works, be sure to refer to my book, <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em><strong>Deep Learning for Computer Vision with Python</strong></em></a>.</p>
<h3>Project structure</h3>
<p>Today’s project includes a number of files which you can grab from the&nbsp;<em><strong>“Downloads”</strong></em> section.</p>
<p>Once you’ve grabbed the scripts + models + images, you can inspect the project structure with the 
			<span id="crayon-5c99c747e5e6a147594463" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">tree</span></span></span>&nbsp; command:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5e75241244802" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">$ tree --dirsfirst
.
├── images
│&nbsp;&nbsp; ├── baden_baden.jpg
│&nbsp;&nbsp; ├── giraffe.jpg
│&nbsp;&nbsp; ├── jurassic_park.jpg
│&nbsp;&nbsp; └── messi.jpg
├── models
│&nbsp;&nbsp; ├── eccv16
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── composition_vii.t7
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── la_muse.t7
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── starry_night.t7
│&nbsp;&nbsp; │&nbsp;&nbsp; └── the_wave.t7
│&nbsp;&nbsp; └── instance_norm
│&nbsp;&nbsp;     ├── candy.t7
│&nbsp;&nbsp;     ├── feathers.t7
│&nbsp;&nbsp;     ├── la_muse.t7
│&nbsp;&nbsp;     ├── mosaic.t7
│&nbsp;&nbsp;     ├── starry_night.t7
│&nbsp;&nbsp;     ├── the_scream.t7
│&nbsp;&nbsp;     └── udnie.t7
├── neural_style_transfer.py
├── neural_style_transfer_examine.py
└── neural_style_transfer_video.py

4 directories, 18 files</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-4">4</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-6">6</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-8">8</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-10">10</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-12">12</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-14">14</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-16">16</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-18">18</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-20">20</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-22">22</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-24">24</div><div class="crayon-num" data-line="crayon-5c99c747e5e75241244802-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e75241244802-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5e75241244802-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-v">tree</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-i">dirsfirst</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-2"><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-3">├──<span class="crayon-h"> </span><span class="crayon-i">images</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-4">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">baden_baden</span><span class="crayon-e">.jpg</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-5">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">giraffe</span><span class="crayon-e">.jpg</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-6">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">jurassic_park</span><span class="crayon-e">.jpg</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-7">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">messi</span><span class="crayon-e">.jpg</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-8">├──<span class="crayon-h"> </span><span class="crayon-i">models</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-9">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-i">eccv16</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-10">│&nbsp;&nbsp;<span class="crayon-h"> </span>│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">composition_vii</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-11">│&nbsp;&nbsp;<span class="crayon-h"> </span>│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">la_muse</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-12">│&nbsp;&nbsp;<span class="crayon-h"> </span>│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">starry_night</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-13">│&nbsp;&nbsp;<span class="crayon-h"> </span>│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">the_wave</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-14">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">instance</span><span class="crayon-sy">_</span>norm</div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-15">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">candy</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-16">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">feathers</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-17">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">la_muse</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-18">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">mosaic</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-19">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">starry_night</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-20">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>├──<span class="crayon-h"> </span><span class="crayon-v">the_scream</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-21">│&nbsp;&nbsp;<span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span>└──<span class="crayon-h"> </span><span class="crayon-v">udnie</span><span class="crayon-e">.t7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-22">├──<span class="crayon-h"> </span><span class="crayon-v">neural_style_transfer</span><span class="crayon-e">.py</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-23">├──<span class="crayon-h"> </span><span class="crayon-v">neural_style_transfer_examine</span><span class="crayon-e">.py</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-24">└──<span class="crayon-h"> </span><span class="crayon-v">neural_style_transfer_video</span><span class="crayon-e">.py</span></div><div class="crayon-line" id="crayon-5c99c747e5e75241244802-25">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e75241244802-26"><span class="crayon-cn">4</span><span class="crayon-h"> </span><span class="crayon-v">directories</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">18</span><span class="crayon-h"> </span><span class="crayon-v">files</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0034 seconds] -->
<p>Once you use the&nbsp;<em><strong>“Downloads”</strong></em> section of the blog post to grab the .zip, you won’t need to go hunting for anything else online. I’ve provided a handful of test 
			<span id="crayon-5c99c747e5e7a374940940" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">images</span><span class="crayon-o">/</span></span></span>&nbsp; as well as a number of 
			<span id="crayon-5c99c747e5e7f774927496" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">models</span><span class="crayon-o">/</span></span></span>&nbsp; that have already been trained by Johnson et. al. You’ll also find three Python scripts to work with and we’ll be reviewing two of them today.</p>
<h3>Implementing neural style transfer</h3>
<p>Let’s get started implementing neural style transfer with OpenCV and Python.</p>
<p>Open up your 
			<span id="crayon-5c99c747e5e83822385969" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">neural_style_transfer</span><span class="crayon-e">.py</span></span></span>&nbsp; file and insert the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5e87316408286" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># import the necessary packages
import argparse
import imutils
import time
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-m", "--model", required=True,
	help="neural style transfer model")
ap.add_argument("-i", "--image", required=True,
	help="input image to apply neural style transfer to")
args = vars(ap.parse_args())</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-4">4</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-6">6</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-8">8</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-10">10</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e87316408286-12">12</div><div class="crayon-num" data-line="crayon-5c99c747e5e87316408286-13">13</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5e87316408286-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-2"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">imutils</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">time</span></div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-6">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-7"><span class="crayon-c"># construct the argument parser and parse the arguments</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-8"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-9"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-m"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--model"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-10"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"neural style transfer model"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-11"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--image"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e87316408286-12"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"input image to apply neural style transfer to"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e87316408286-13"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0023 seconds] -->
<p>First, we import our required packages and parse command line arguments.</p>
<p>Our notable imports are:</p>
<ul>
<li><a href="https://github.com/jrosebr1/imutils" target="_blank" rel="noopener">imutils</a>: This package is pip-installable via 
			<span id="crayon-5c99c747e5e8c999961592" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-e">pip </span><span class="crayon-v">install</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">upgrade </span><span class="crayon-v">imutils</span></span></span>&nbsp;. I recently released 
			<span id="crayon-5c99c747e5e90458917853" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">imutils</span><span class="crayon-o">==</span><span class="crayon-cn">0.5.1</span></span></span>&nbsp;, so don’t forget to upgrade!</li>
<li><a href="https://opencv.org/" target="_blank" rel="noopener">OpenCV</a>: You need OpenCV 3.4 or better in order to use today’s code. You can install OpenCV 4 using my tutorials for&nbsp;<a href="https://www.pyimagesearch.com/2018/08/15/how-to-install-opencv-4-on-ubuntu/" target="_blank" rel="noopener">Ubuntu</a>&nbsp;and&nbsp;<a href="https://www.pyimagesearch.com/2018/08/17/install-opencv-4-on-macos/" target="_blank" rel="noopener">macOS</a>.</li>
</ul>
<p>We have two <em>required&nbsp;</em>command line arguments for this script:</p>
<ul>
<li>
			<span id="crayon-5c99c747e5e95436447487" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">model</span></span></span>&nbsp;: The neural style transfer model path. I’ve included 11 pre-trained models for you to use in the&nbsp;<em><strong>“Downloads”</strong></em>.</li>
<li>
			<span id="crayon-5c99c747e5e99032836541" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">image</span></span></span>&nbsp;: Our input image which we’ll apply the neural style to. I’ve included 4 sample images. Feel free to experiment with your own as well!</li>
</ul>
<p>You do not have to change the command line argument code — the arguments are passed and processed at runtime. If you aren’t familiar with how this works, be sure to read my <a href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" target="_blank" rel="noopener">command line arguments + argparse blog post</a>.</p>
<p>Now comes the fun part — we’re going to load our image + model and then compute neural style transfer:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5e9e010741985" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># load the neural style transfer model from disk
print("[INFO] loading style transfer model...")
net = cv2.dnn.readNetFromTorch(args["model"])

# load the input image, resize it to have a width of 600 pixels, and
# then grab the image dimensions
image = cv2.imread(args["image"])
image = imutils.resize(image, width=600)
(h, w) = image.shape[:2]

# construct a blob from the image, set the input, and then perform a
# forward pass of the network
blob = cv2.dnn.blobFromImage(image, 1.0, (w, h),
	(103.939, 116.779, 123.680), swapRB=False, crop=False)
net.setInput(blob)
start = time.time()
output = net.forward()
end = time.time()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-16">16</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-18">18</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-20">20</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-22">22</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-24">24</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-26">26</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-28">28</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-30">30</div><div class="crayon-num" data-line="crayon-5c99c747e5e9e010741985-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5e9e010741985-32">32</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-15"><span class="crayon-c"># load the neural style transfer model from disk</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-16"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] loading style transfer model..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-17"><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromTorch</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"model"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-18">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-19"><span class="crayon-c"># load the input image, resize it to have a width of 600 pixels, and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-20"><span class="crayon-c"># then grab the image dimensions</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-21"><span class="crayon-v">image</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"image"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-22"><span class="crayon-v">image</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">resize</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-o">=</span><span class="crayon-cn">600</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-23"><span class="crayon-sy">(</span><span class="crayon-v">h</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">image</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-24">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-25"><span class="crayon-c"># construct a blob from the image, set the input, and then perform a</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-26"><span class="crayon-c"># forward pass of the network</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-27"><span class="crayon-v">blob</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">blobFromImage</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-28"><span class="crayon-h">	</span><span class="crayon-sy">(</span><span class="crayon-cn">103.939</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">116.779</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">123.680</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">swapRB</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">crop</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-29"><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">setInput</span><span class="crayon-sy">(</span><span class="crayon-v">blob</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-30"><span class="crayon-v">start</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5e9e010741985-31"><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">forward</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5e9e010741985-32"><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0037 seconds] -->
<p>In this code block we proceed to:</p>
<ul>
<li>Load a pre-trained neural style transfer model into memory as 
			<span id="crayon-5c99c747e5ea3523249060" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">net</span></span></span>&nbsp; (<strong>Line 17</strong>).</li>
<li>Load the input 
			<span id="crayon-5c99c747e5ea7393448667" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">image</span></span></span>&nbsp; and resize it (<strong>Lines 21 and 22</strong>).</li>
<li>Construct a 
			<span id="crayon-5c99c747e5eab542413065" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp; by performing mean subtraction (<strong>Lines 27 and 28</strong>). Read about 
			<span id="crayon-5c99c747e5eb0848321387" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-v">blobFromImage</span></span></span>&nbsp; and how it works in my <a href="https://www.pyimagesearch.com/2017/11/06/deep-learning-opencvs-blobfromimage-works/" target="_blank" rel="noopener">previous blog post</a>.</li>
<li>Perform a&nbsp;
			<span id="crayon-5c99c747e5eb4216918344" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">forward</span></span></span>&nbsp; pass to obtain an&nbsp;
			<span id="crayon-5c99c747e5eb8198367235" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span></span></span>&nbsp; image (i.e., the result of the neural style transfer process) on&nbsp;<strong>Line 31</strong>. I’ve also surrounded this line with timestamps for benchmarking purposes.</li>
</ul>
<p>Next, it is <em><strong>critical</strong></em> that we&nbsp;post-process the 
			<span id="crayon-5c99c747e5ebc825184742" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span></span></span>&nbsp; image:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5ec0834897538" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># reshape the output tensor, add back in the mean subtraction, and
# then swap the channel ordering
output = output.reshape((3, output.shape[2], output.shape[3]))
output[0] += 103.939
output[1] += 116.779
output[2] += 123.680
output /= 255.0
output = output.transpose(1, 2, 0)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5ec0834897538-34">34</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ec0834897538-35">35</div><div class="crayon-num" data-line="crayon-5c99c747e5ec0834897538-36">36</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ec0834897538-37">37</div><div class="crayon-num" data-line="crayon-5c99c747e5ec0834897538-38">38</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ec0834897538-39">39</div><div class="crayon-num" data-line="crayon-5c99c747e5ec0834897538-40">40</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ec0834897538-41">41</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5ec0834897538-34"><span class="crayon-c"># reshape the output tensor, add back in the mean subtraction, and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ec0834897538-35"><span class="crayon-c"># then swap the channel ordering</span></div><div class="crayon-line" id="crayon-5c99c747e5ec0834897538-36"><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">3</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ec0834897538-37"><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">103.939</span></div><div class="crayon-line" id="crayon-5c99c747e5ec0834897538-38"><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">116.779</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ec0834897538-39"><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">123.680</span></div><div class="crayon-line" id="crayon-5c99c747e5ec0834897538-40"><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">/=</span><span class="crayon-h"> </span><span class="crayon-cn">255.0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ec0834897538-41"><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-e">transpose</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0026 seconds] -->
<p>For the particular image I’m using for this example, the 
			<span id="crayon-5c99c747e5ec5751997252" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span></span></span>&nbsp; NumPy array will have the shape 
			<span id="crayon-5c99c747e5ec9244151359" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">452</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">600</span><span class="crayon-sy">)</span></span></span>&nbsp;:</p>
<ul>
<li>The 
			<span id="crayon-5c99c747e5ecd632929877" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-cn">1</span></span></span>&nbsp; indicates that we passed a batch size of one (i.e., just our single image) through the network.</li>
<li>OpenCV is using channels-first ordering here, indicating there are 
			<span id="crayon-5c99c747e5ed1589418739" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-cn">3</span></span></span>&nbsp; channels in the output image.</li>
<li>The final two values in the output shape are the number of rows (height) and number of columns (width).</li>
</ul>
<p>We reshape the matrix to simply be 
			<span id="crayon-5c99c747e5ed5478265792" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-sy">)</span></span></span>&nbsp; (<strong>Line 36</strong>) and then “de-process” the image by:</p>
<ol>
<li>Adding back in the mean values we previously subtracted (<strong>Lines 37-39</strong>).</li>
<li>Scaling (<strong>Line 40</strong>).</li>
<li>Transposing the matrix to be channels-last ordering (<strong>Line 41</strong>).</li>
</ol>
<p>The final step is to show the output of the neural style transfer process to our screen:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5eda331538804" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># show information on how long inference took
print("[INFO] neural style transfer took {:.4f} seconds".format(
	end - start))

# show the images
cv2.imshow("Input", image)
cv2.imshow("Output", output)
cv2.waitKey(0)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5eda331538804-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5eda331538804-44">44</div><div class="crayon-num" data-line="crayon-5c99c747e5eda331538804-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5eda331538804-46">46</div><div class="crayon-num" data-line="crayon-5c99c747e5eda331538804-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5eda331538804-48">48</div><div class="crayon-num" data-line="crayon-5c99c747e5eda331538804-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5eda331538804-50">50</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5eda331538804-43"><span class="crayon-c"># show information on how long inference took</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5eda331538804-44"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] neural style transfer took {:.4f} seconds"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c99c747e5eda331538804-45"><span class="crayon-h">	</span><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">start</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5eda331538804-46">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5eda331538804-47"><span class="crayon-c"># show the images</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5eda331538804-48"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Input"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">image</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5eda331538804-49"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Output"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5eda331538804-50"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
<h3>Neural style transfer results</h3>
<p>In order to replicate my results, you will need to grab the&nbsp;<em><strong>“Downloads”</strong></em> for this blog post.</p>
<p>Once you’ve grabbed the files, open up terminal and execute the following command:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5ede834769409" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">$ python neural_style_transfer.py --image images/giraffe.jpg \
	--model models/eccv16/the_wave.t7
[INFO] loading style transfer model...
[INFO] neural style transfer took 0.3152 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5ede834769409-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ede834769409-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5ede834769409-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ede834769409-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5ede834769409-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">neural_style_transfer</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">giraffe</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ede834769409-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">model </span><span class="crayon-v">models</span><span class="crayon-o">/</span><span class="crayon-v">eccv16</span><span class="crayon-o">/</span><span class="crayon-v">the_wave</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5ede834769409-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ede834769409-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">neural </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.3152</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p><div id="attachment_8571" style="max-width: 610px" class="wp-caption aligncenter"><a href="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output02.jpg"><img class="size-full wp-image-8571" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output02.jpg" alt="" width="600" height="237" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output02.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output02-300x119.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a><p class="wp-caption-text"><strong>Figure 3:</strong> Neural Style Transfer with OpenCV applied to a picture of me feeding a giraffe. The output is stylized from <a href="https://en.wikipedia.org/wiki/The_Great_Wave_off_Kanagawa" target="_blank" rel="noopener"><em>The Great Wave Off Kanagawa</em></a>&nbsp;which you can see in the top-left corner.</p></div><p></p>
<p>Now, simply change the <a href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" target="_blank" rel="noopener">command line arguments</a> to use a screen capture from my favorite movie,&nbsp;<a href="https://www.imdb.com/title/tt0107290/" target="_blank" rel="noopener"><em>Jurassic Park</em></a>, as the content image, and then&nbsp;<a href="https://en.wikipedia.org/wiki/The_Scream" target="_blank" rel="noopener"><em>The Scream</em></a> style model:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5ee4955487904" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">$ python neural_style_transfer.py --image images/jurassic_park.jpg \
	--model models/instance_norm/the_scream.t7
[INFO] loading style transfer model...
[INFO] neural style transfer took 0.1202 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5ee4955487904-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ee4955487904-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5ee4955487904-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ee4955487904-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5ee4955487904-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">neural_style_transfer</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">jurassic_park</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ee4955487904-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">model </span><span class="crayon-v">models</span><span class="crayon-o">/</span><span class="crayon-v">instance_norm</span><span class="crayon-o">/</span><span class="crayon-v">the_scream</span><span class="crayon-e">.t7</span></div><div class="crayon-line" id="crayon-5c99c747e5ee4955487904-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ee4955487904-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">neural </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.1202</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p><div id="attachment_8572" style="max-width: 610px" class="wp-caption aligncenter"><a href="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output03.jpg"><img class="size-full wp-image-8572" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output03.jpg" alt="" width="600" height="181" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output03.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output03-300x91.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a><p class="wp-caption-text"><strong>Figure 4:</strong> A <em><a href="http://jurassicpark.wikia.com/" target="_blank" rel="noopener">Jurassic Park</a></em> movie frame undergoes Neural Style Transfer using OpenCV. <em><a href="https://en.wikipedia.org/wiki/The_Scream" target="_blank" rel="noopener">The Scream</a></em> style is applied to the image producing an artistic effect.</p></div><p></p>
<p>And changing the command line arguments in your terminal once more:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5ee9615934755" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">$ python neural_style_transfer.py --image images/messi.jpg \
	--model models/instance_norm/udnie.t7 
[INFO] loading style transfer model...
[INFO] neural style transfer took 0.1495 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5ee9615934755-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ee9615934755-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5ee9615934755-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ee9615934755-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5ee9615934755-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">neural_style_transfer</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">messi</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ee9615934755-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">model </span><span class="crayon-v">models</span><span class="crayon-o">/</span><span class="crayon-v">instance_norm</span><span class="crayon-o">/</span><span class="crayon-v">udnie</span><span class="crayon-e">.t7</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-5c99c747e5ee9615934755-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ee9615934755-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">neural </span><span class="crayon-e">style </span><span class="crayon-e">transfer </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.1495</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p><div id="attachment_8573" style="max-width: 610px" class="wp-caption aligncenter"><a href="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output04.jpg"><img class="size-full wp-image-8573" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_output04.jpg" alt="" width="600" height="237" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output04.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/08/neural_style_transfer_output04-300x119.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a><p class="wp-caption-text"><strong>Figure 5:</strong> Using the artist&nbsp;<a href="https://en.wikipedia.org/wiki/Francis_Picabia" target="_blank" rel="noopener">Francis Picabia’s</a> famous <em>Udnie, Young American Girl</em> oil painting, an image of <a href="https://en.wikipedia.org/wiki/Lionel_Messi" target="_blank" rel="noopener">Lionel Messi</a>, Argentinian soccer player, undergoes Neural Style Transfer with OpenCV.</p></div><p></p>
<p><strong>Figure 5</strong> is arguably my favorite — it just&nbsp;<em>feels</em> like it could be printed and hung on a wall in a sports bar.</p>
<p>In these three examples, we’ve created <strong>deep learning art!</strong> In the terminal output, the time elapsed to compute the output image is shown — each CNN model is a little bit different and you should expect different timings for each of the models.</p>
<p><em><strong>Challenge!&nbsp;</strong></em><em>Can you create fancy deep learning artwork with neural style transfer? I’d love to see you <strong>tweet</strong>&nbsp;your artwork results — just use the hashtag, <a href="https://twitter.com/hashtag/neuralstyletransfer" target="_blank" rel="noopener">#neuralstyletransfer</a>&nbsp;and mention me in the tweet (<a href="https://twitter.com/PyImageSearch" target="_blank" rel="noopener">@PyImageSearch</a>). Also, be sure to give credit to the artists and photographers — tag them if they are on Twitter as well.</em></p>
<h3>Real-time neural style transfer</h3>
<p>Now that we’ve learned how to apply neural style transfer to single images, let’s learn how to apply the process to (near) real-time video as well.</p>
<p>The process is quite similar to performing neural style transfer on a static image. In this script, we’ll:</p>
<ul>
<li>Utilize a special Python iterator which will allow us to cycle over all available neural style transfer models in our 
			<span id="crayon-5c99c747e5eef176037402" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">models</span></span></span>&nbsp; path.</li>
<li>Start our webcam video stream — our webcam frames will be processed in (near) real-time. Slower systems may lag quite a bit for certain larger models.</li>
<li>Loop over incoming frames.</li>
<li>Perform neural style transfer on the frame, post-process the output, and display the result to the screen (you’ll recognize this from above as it is nearly identical).</li>
<li>If the user presses the “n” key on their keyboard, we’ll utilize the iterator to cycle to the next neural style transfer model without having to stop/restart the script.</li>
</ul>
<p>Without further ado, let’s get to it.</p>
<p>Open up your 
			<span id="crayon-5c99c747e5ef3876135761" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">neural_style_transfer_video</span><span class="crayon-e">.py</span></span></span>&nbsp; file and insert the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5ef8590411726" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># import the necessary packages
from imutils.video import VideoStream
from imutils import paths
import itertools
import argparse
import imutils
import time
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-m", "--models", required=True,
	help="path to directory containing neural style transfer models")
args = vars(ap.parse_args())</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-2">2</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-4">4</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-6">6</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-8">8</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-10">10</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-12">12</div><div class="crayon-num" data-line="crayon-5c99c747e5ef8590411726-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5ef8590411726-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-2"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">video </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">VideoStream</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-3"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-e">imutils </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">paths</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">itertools</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">imutils</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-7"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">time</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-8"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-10"><span class="crayon-c"># construct the argument parser and parse the arguments</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-11"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-12"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-m"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--models"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c99c747e5ef8590411726-13"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to directory containing neural style transfer models"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5ef8590411726-14"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p>We begin by importing required packages/modules.</p>
<p>From there, we just need the path to our 
			<span id="crayon-5c99c747e5efc841415981" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">models</span><span class="crayon-o">/</span></span></span>&nbsp; directory (a selection of models is included with today’s&nbsp;<em><strong>“Downloads”</strong></em>). The command line argument, 
			<span id="crayon-5c99c747e5f00033792934" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">models</span></span></span>&nbsp;, coupled with 
			<span id="crayon-5c99c747e5f04061157160" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-k ">argparse</span></span></span>&nbsp;, allows us to pass the path at runtime.</p>
<p>Next, let’s create our model path iterator:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f09760323706" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># grab the paths to all neural style transfer models in our 'models'
# directory, provided all models end with the '.t7' file extension
modelPaths = paths.list_files(args["models"], validExts=(".t7",))
modelPaths = sorted(list(modelPaths))

# generate unique IDs for each of the model paths, then combine the
# two lists together
models = list(zip(range(0, len(modelPaths)), (modelPaths)))

# use the cycle function of itertools that can loop over all model
# paths, and then when the end is reached, restart again
modelIter = itertools.cycle(models)
(modelID, modelPath) = next(modelIter)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-16">16</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-17">17</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-18">18</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-19">19</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-20">20</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-21">21</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-22">22</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-23">23</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-24">24</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-25">25</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-26">26</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f09760323706-27">27</div><div class="crayon-num" data-line="crayon-5c99c747e5f09760323706-28">28</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f09760323706-16"><span class="crayon-c"># grab the paths to all neural style transfer models in our 'models'</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-17"><span class="crayon-c"># directory, provided all models end with the '.t7' file extension</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-18"><span class="crayon-v">modelPaths</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">paths</span><span class="crayon-sy">.</span><span class="crayon-e">list_files</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"models"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">validExts</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-s">".t7"</span><span class="crayon-sy">,</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-19"><span class="crayon-v">modelPaths</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">sorted</span><span class="crayon-sy">(</span><span class="crayon-k ">list</span><span class="crayon-sy">(</span><span class="crayon-v">modelPaths</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-20">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-21"><span class="crayon-c"># generate unique IDs for each of the model paths, then combine the</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-22"><span class="crayon-c"># two lists together</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-23"><span class="crayon-v">models</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">list</span><span class="crayon-sy">(</span><span class="crayon-k ">zip</span><span class="crayon-sy">(</span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">modelPaths</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">modelPaths</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-24">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-25"><span class="crayon-c"># use the cycle function of itertools that can loop over all model</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-26"><span class="crayon-c"># paths, and then when the end is reached, restart again</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f09760323706-27"><span class="crayon-v">modelIter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">itertools</span><span class="crayon-sy">.</span><span class="crayon-e">cycle</span><span class="crayon-sy">(</span><span class="crayon-v">models</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f09760323706-28"><span class="crayon-sy">(</span><span class="crayon-v">modelID</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">next</span><span class="crayon-sy">(</span><span class="crayon-v">modelIter</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0024 seconds] -->
<p>Once we begin processing frames in a 
			<span id="crayon-5c99c747e5f0d691813957" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">while</span></span></span>&nbsp; loop (to be covered in a few code blocks), a “n” keypress will load the “next” model in the iterator. This allows you to see the effect of each neural style model in your video stream <em>without</em> having to stop your script, change your model path, and then restart.</p>
<p>To construct our model iterator, we:</p>
<ul>
<li>Grab and sort paths to all neural style transfer models (<strong>Lines 18 and 19</strong>).</li>
<li>Assign a unique ID to each (<strong>Line 23</strong>).</li>
<li>Use 
			<span id="crayon-5c99c747e5f12350849529" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-k ">itertools</span></span></span>&nbsp; and 
			<span id="crayon-5c99c747e5f16657264664" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cycle</span></span></span>&nbsp; to create an iterator (<strong>Line 27</strong>). Essentially, 
			<span id="crayon-5c99c747e5f1a929763629" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cycle</span></span></span>&nbsp; allows us to create a circular list which when you reach the end of it, starts back at the beginning.</li>
</ul>
<p>Calling the&nbsp;
			<span id="crayon-5c99c747e5f1e736755048" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-k ">next</span></span></span>&nbsp; method of the 
			<span id="crayon-5c99c747e5f22382232637" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">modelIter</span></span></span>&nbsp; grabs our first 
			<span id="crayon-5c99c747e5f26872892769" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">modelID</span></span></span>&nbsp; and 
			<span id="crayon-5c99c747e5f2a748258250" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">modelPath</span></span></span>&nbsp; (<strong>Line 28</strong>).</p>
<p>If you are new to Python iterators or iterators in general (most programming languages implement them), then be sure to give <a href="https://realpython.com/python-itertools/" target="_blank" rel="noopener">this article by RealPython</a> a read.</p>
<p>Let’s load the first neural style transfer model and initialize our video stream:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f2e901635710" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># load the neural style transfer model from disk
print("[INFO] loading style transfer model...")
net = cv2.dnn.readNetFromTorch(modelPath)

# initialize the video stream, then allow the camera sensor to warm up
print("[INFO] starting video stream...")
vs = VideoStream(src=0).start()
time.sleep(2.0)
print("[INFO] {}. {}".format(modelID + 1, modelPath))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f2e901635710-30">30</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f2e901635710-31">31</div><div class="crayon-num" data-line="crayon-5c99c747e5f2e901635710-32">32</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f2e901635710-33">33</div><div class="crayon-num" data-line="crayon-5c99c747e5f2e901635710-34">34</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f2e901635710-35">35</div><div class="crayon-num" data-line="crayon-5c99c747e5f2e901635710-36">36</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f2e901635710-37">37</div><div class="crayon-num" data-line="crayon-5c99c747e5f2e901635710-38">38</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f2e901635710-30"><span class="crayon-c"># load the neural style transfer model from disk</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f2e901635710-31"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] loading style transfer model..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f2e901635710-32"><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromTorch</span><span class="crayon-sy">(</span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f2e901635710-33">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5f2e901635710-34"><span class="crayon-c"># initialize the video stream, then allow the camera sensor to warm up</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f2e901635710-35"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] starting video stream..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f2e901635710-36"><span class="crayon-v">vs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">VideoStream</span><span class="crayon-sy">(</span><span class="crayon-v">src</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">start</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f2e901635710-37"><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-e">sleep</span><span class="crayon-sy">(</span><span class="crayon-cn">2.0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f2e901635710-38"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] {}. {}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">modelID</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p>On&nbsp;<strong>Line 32</strong>, we read the first neural style transfer model using its path.</p>
<p>Then on&nbsp;<strong>Lines 36 and 37</strong>, we initialize our video stream so we can grab frames from our webcam.</p>
<p>Let’s begin looping over frames:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f33235115988" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># loop over frames from the video file stream
while True:
	# grab the frame from the threaded video stream
	frame = vs.read()

	# resize the frame to have a width of 600 pixels (while
	# maintaining the aspect ratio), and then grab the image
	# dimensions
	frame = imutils.resize(frame, width=600)
	orig = frame.copy()
	(h, w) = frame.shape[:2]

	# construct a blob from the frame, set the input, and then perform a
	# forward pass of the network
	blob = cv2.dnn.blobFromImage(frame, 1.0, (w, h),
		(103.939, 116.779, 123.680), swapRB=False, crop=False)
	net.setInput(blob)
	output = net.forward()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-40">40</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-41">41</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-42">42</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-43">43</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-44">44</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-45">45</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-46">46</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-47">47</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-48">48</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-49">49</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-50">50</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-51">51</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-52">52</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-53">53</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-54">54</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-55">55</div><div class="crayon-num" data-line="crayon-5c99c747e5f33235115988-56">56</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f33235115988-57">57</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f33235115988-40"><span class="crayon-c"># loop over frames from the video file stream</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-41"><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-42"><span class="crayon-h">	</span><span class="crayon-c"># grab the frame from the threaded video stream</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-43"><span class="crayon-h">	</span><span class="crayon-v">frame</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-44">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-45"><span class="crayon-h">	</span><span class="crayon-c"># resize the frame to have a width of 600 pixels (while</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-46"><span class="crayon-h">	</span><span class="crayon-c"># maintaining the aspect ratio), and then grab the image</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-47"><span class="crayon-h">	</span><span class="crayon-c"># dimensions</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-48"><span class="crayon-h">	</span><span class="crayon-v">frame</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">resize</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-o">=</span><span class="crayon-cn">600</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-49"><span class="crayon-h">	</span><span class="crayon-v">orig</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-k ">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-50"><span class="crayon-h">	</span><span class="crayon-sy">(</span><span class="crayon-v">h</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-51">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-52"><span class="crayon-h">	</span><span class="crayon-c"># construct a blob from the frame, set the input, and then perform a</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-53"><span class="crayon-h">	</span><span class="crayon-c"># forward pass of the network</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-54"><span class="crayon-h">	</span><span class="crayon-v">blob</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">blobFromImage</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-55"><span class="crayon-h">		</span><span class="crayon-sy">(</span><span class="crayon-cn">103.939</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">116.779</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">123.680</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">swapRB</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">crop</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f33235115988-56"><span class="crayon-h">	</span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">setInput</span><span class="crayon-sy">(</span><span class="crayon-v">blob</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f33235115988-57"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">forward</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0034 seconds] -->
<p>Our 
			<span id="crayon-5c99c747e5f38811398728" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">while</span></span></span>&nbsp; loop begins on&nbsp;<strong>Line 41</strong>.</p>
<p><strong>Lines 43-57</strong> are nearly identical to the previous script we reviewed with the only exception being that we load a frame from the video stream rather than an image file on disk.</p>
<p>Essentially we grab the 
			<span id="crayon-5c99c747e5f3c854705920" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp;, preprocess it into a 
			<span id="crayon-5c99c747e5f40926116208" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp;, and send it through the CNN. Be sure to refer to scroll up to my previous explanation if you didn’t read it already.</p>
<p>There’s a lot of computation going on behind the scenes here in the CNN. If you’re curious how to train your own neural style transfer model with Keras, be sure to refer to&nbsp;my book,&nbsp;<a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>.</p>
<p>Next, we’ll post-process and display the 
			<span id="crayon-5c99c747e5f44231404041" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span></span></span>&nbsp; image:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f48815152842" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">	# reshape the output tensor, add back in the mean subtraction, and
	# then swap the channel ordering
	output = output.reshape((3, output.shape[2], output.shape[3]))
	output[0] += 103.939
	output[1] += 116.779
	output[2] += 123.680
	output /= 255.0
	output = output.transpose(1, 2, 0)

	# show the original frame along with the output neural style
	# transfer
	cv2.imshow("Input", frame)
	cv2.imshow("Output", output)
	key = cv2.waitKey(1) &amp; 0xFF</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-60">60</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-62">62</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-63">63</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-64">64</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-65">65</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-66">66</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-67">67</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-68">68</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-69">69</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-70">70</div><div class="crayon-num" data-line="crayon-5c99c747e5f48815152842-71">71</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f48815152842-72">72</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f48815152842-59"><span class="crayon-h">	</span><span class="crayon-c"># reshape the output tensor, add back in the mean subtraction, and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-60"><span class="crayon-h">	</span><span class="crayon-c"># then swap the channel ordering</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-61"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">3</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-62"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">103.939</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-63"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">116.779</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-64"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">123.680</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-65"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">/=</span><span class="crayon-h"> </span><span class="crayon-cn">255.0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-66"><span class="crayon-h">	</span><span class="crayon-v">output</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">.</span><span class="crayon-e">transpose</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-67">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-68"><span class="crayon-h">	</span><span class="crayon-c"># show the original frame along with the output neural style</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-69"><span class="crayon-h">	</span><span class="crayon-c"># transfer</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-70"><span class="crayon-h">	</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Input"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f48815152842-71"><span class="crayon-h">	</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Output"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f48815152842-72"><span class="crayon-h">	</span><span class="crayon-v">key</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-cn">0xFF</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0030 seconds] -->
<p>Again,&nbsp;<strong>Lines 61-66</strong> are identical to the static image neural style script above where I explained these lines in detail. These lines are&nbsp;<em><strong>critical</strong></em> to you seeing the correct result. Our output image is “de-processed” by reshaping, mean addition (since we subtracted the mean earlier), rescaling, and transposing.</p>
<p>The output of our neural style transfer is shown on&nbsp;<strong>Lines 70 and 71</strong>, where&nbsp;<em>both</em> the original and processed frames are displayed on the screen.</p>
<p>We also capture keypresses on <strong>Line 72</strong>. The keys are processed in the next block:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f4e460762569" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">	# if the `n` key is pressed (for "next"), load the next neural
	# style transfer model
	if key == ord("n"):
		# grab the next neural style transfer model model and load it
		(modelID, modelPath) = next(modelIter)
		print("[INFO] {}. {}".format(modelID + 1, modelPath))
		net = cv2.dnn.readNetFromTorch(modelPath)

	# otheriwse, if the `q` key was pressed, break from the loop
	elif key == ord("q"):
		break

# do a bit of cleanup
cv2.destroyAllWindows()
vs.stop()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-74">74</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-75">75</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-76">76</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-77">77</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-78">78</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-79">79</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-80">80</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-81">81</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-82">82</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-83">83</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-84">84</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-85">85</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-86">86</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c99c747e5f4e460762569-87">87</div><div class="crayon-num" data-line="crayon-5c99c747e5f4e460762569-88">88</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-74"><span class="crayon-h">	</span><span class="crayon-c"># if the `n` key is pressed (for "next"), load the next neural</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-75"><span class="crayon-h">	</span><span class="crayon-c"># style transfer model</span></div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-76"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">key</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-k ">ord</span><span class="crayon-sy">(</span><span class="crayon-s">"n"</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-77"><span class="crayon-h">		</span><span class="crayon-c"># grab the next neural style transfer model model and load it</span></div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-78"><span class="crayon-h">		</span><span class="crayon-sy">(</span><span class="crayon-v">modelID</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">next</span><span class="crayon-sy">(</span><span class="crayon-v">modelIter</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-79"><span class="crayon-h">		</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] {}. {}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">modelID</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-80"><span class="crayon-h">		</span><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromTorch</span><span class="crayon-sy">(</span><span class="crayon-v">modelPath</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-81">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-82"><span class="crayon-h">	</span><span class="crayon-c"># otheriwse, if the `q` key was pressed, break from the loop</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-83"><span class="crayon-h">	</span><span class="crayon-st">elif</span><span class="crayon-h"> </span><span class="crayon-v">key</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-k ">ord</span><span class="crayon-sy">(</span><span class="crayon-s">"q"</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-84"><span class="crayon-h">		</span><span class="crayon-st">break</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-85">&nbsp;</div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-86"><span class="crayon-c"># do a bit of cleanup</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c99c747e5f4e460762569-87"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">destroyAllWindows</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c99c747e5f4e460762569-88"><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">stop</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0023 seconds] -->
<p>There are two keys that will cause different behaviors while the script is running:</p>
<ul>
<li>“n”: Grabs the “next” neural style transfer model path + ID and loads it (<strong>Lines 76-80</strong>). If we’ve reached the last model, the iterator will cycle back to the beginning.</li>
<li>“q”: Pressing the “q” key will “quit” the 
			<span id="crayon-5c99c747e5f52053637049" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">while</span></span></span>&nbsp; loop (<strong>Lines 83 and 84</strong>).</li>
</ul>
<p>Cleanup is then performed on the remaining lines.</p>
<h3>Real-time neural style transfer results</h3>
<p>Once you’ve used the <em><strong>“Downloads”</strong></em> section of this tutorial to download the source code and neural style transfer models, you can execute the following command to apply style transfer to your own video streams:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c99c747e5f57574998283" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Neural Style Transfer with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">$ python neural_style_transfer_video.py --models models</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c99c747e5f57574998283-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c99c747e5f57574998283-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">neural_style_transfer_video</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">models </span><span class="crayon-v">models</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p><img class="aligncenter" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/neural_style_transfer_animation.gif" alt="" width="500"></p>
<p>As you can see, it’s easy to cycle through the neural style transfer models using a single keypress.</p>
<p>I have included a short demo video of myself applying neural transfer below:</p>
<p><iframe width="500" height="375" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/DRpydtvjGdE(1).html" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></p>
<p>&nbsp;</p>
<h3>Where can I learn more about neural style transfer?</h3>
<p><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="blank"><img class="aligncenter" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/featured_deep_dreaming.jpg" alt="" width="600" height="332"></a></p>
<p>If you’re interested in learning more about neural style transfer, including the history, theory, and implementing your own custom neural style transfer pipeline with Keras, I would suggest you take a look at my book, <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>:</p>
<p><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><img class="aligncenter wp-image-6954" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/dl4cv_trusted_by_cover.png" alt="" width="500" height="548" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/01/dl4cv_trusted_by_cover.png 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/01/dl4cv_trusted_by_cover-274x300.png 274w" sizes="(max-width: 500px) 100vw, 500px"></a></p>
<p>Inside the book I discuss the Gatys et al. method in detail, including fully-documented Python + Keras code.</p>
<p>Using the methods discussed in the book, you’ll be able to apply neural style transfer to your own style and content images.</p>
<p>Inside the book you’ll also find:</p>
<ul>
<li><strong>Super practical walkthroughs</strong> that present solutions to actual, real-world image classification problems, challenges, and competitions.</li>
<li><strong>Hands-on tutorials (with lots of code)</strong> that not only show you the algorithms behind deep learning for computer vision but their implementations as well.</li>
<li><strong>A no-nonsense teaching style</strong> that is guaranteed to help you master deep learning for image understanding and visual recognition.</li>
</ul>
<p><strong>To learn more about the book (and grab your set of free sample chapters + table of contents), <em><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener">just use this link</a>!</em></strong></p>
<h2>Summary</h2>
<p>In today’s blog post you learned how to apply neural style transfer to both images and video using OpenCV and Python.</p>
<p>Specifically, we utilized the models trained by Johnson et al. in their 2016 publication on neural style transfer — for your convenience, I have included the models in the <em><strong>“Downloads”</strong></em> section of this blog post.</p>
<p>I hope you enjoyed today’s tutorial on neural style transfer!</p>
<p>Be sure to use Twitter and the comments section to post links to your own beautiful works of art — I can’t wait to see them!</p>
<p><strong>To be notified when future blog posts are published here on PyImageSearch, <em>just enter your email address in the form below!</em></strong></p>
<h2 id="post_downloads">Downloads:</h2>
<div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-761"><form action="https://www.getdrip.com/forms/619800381/submissions" method="post" target="blank" data-drip-embedded-form="619800381" data-drip-id="619800381"><img style="padding-right: 10px; width: 115px; border: none; float: left;" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/download-code-icon.png" alt="">If you would like to download the code and images used in this post, please enter your email address in the form below. Not only will you get a .zip of the code, I’ll also send you a <strong>FREE 17-page Resource Guide on Computer Vision, OpenCV, and Deep Learning.</strong> Inside you'll find my hand-picked tutorials, books, courses, and libraries to help you master CV and DL! Sound good? If so, enter your email address and I’ll send you the code immediately!
<p style="margin-left: 130px; margin-top: 10px;"><label for="fields[email]">Email address:</label><input name="fields[email]" type="email" value="" placeholder="Your email address"></p>
<p style="margin-left: 130px;"><input type="submit" value="Download the code!"></p>
<input type="hidden" name="time_zone" value="Asia/Shanghai"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/"><input type="hidden" name="page_title" value="Neural Style Transfer with OpenCV - PyImageSearch"></form></div>
	</section><!-- /.entry -->
	<div class="fix"></div>
		<aside id="connect">
		<h3>Resource Guide (it’s totally free).</h3>

		<div>
			<p><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px;width: 230px;float: left">
</p><div style="padding-top: 35px">
Enter your email address below to get my <strong>free 17-page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF</strong>. Inside you'll find my hand-picked tutorials, books, courses, and Python libraries to help you master computer vision and deep learning!</div><p></p>

			
						<form action="https://www.getdrip.com/forms/657075648/submissions" method="post" target="_blank" data-drip-embedded-form="657075648" data-drip-id="657075648">
				<div>
					<input type="email" name="fields[email]" class="required email" value="" placeholder="Your email address" style="width: 50%;">
				</div>
				<div>
					<input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button">
				</div>
			<input type="hidden" name="time_zone" value="Asia/Shanghai"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/"><input type="hidden" name="page_title" value="Neural Style Transfer with OpenCV - PyImageSearch"></form>
			
						<div class="social">
		   					</div>
			
		</div><!-- col-left -->

		
        <div class="fix"></div>
	</aside>
	<div class="post-utility"><p class="tags"><i class="icon-tag"></i> <a href="https://www.pyimagesearch.com/tag/convolutional-neural-network/" rel="tag">convolutional neural network</a>, <a href="https://www.pyimagesearch.com/tag/deep-learning/" rel="tag">deep learning</a>, <a href="https://www.pyimagesearch.com/tag/neural-nets/" rel="tag">neural nets</a>, <a href="https://www.pyimagesearch.com/tag/neural-style-transfer/" rel="tag">neural style transfer</a></p> </div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="https://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/" rel="prev"><i class="icon-angle-left"></i> OpenCV Text Detection (EAST text detector)</a></div>
	            <div class="nav-next fr"><a href="https://www.pyimagesearch.com/2018/09/03/semantic-segmentation-with-opencv-and-deep-learning/" rel="next">Semantic segmentation with OpenCV and deep learning <i class="icon-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">61 Responses to <em>Neural Style Transfer with OpenCV</em></h3>
		 	<ol class="commentlist">
					                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-475650"></a>
	      	
	      	<div id="li-comment-475650" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/eeb4abbca8c9ae532ef80c699c22f2e5.png" srcset="https://secure.gravatar.com/avatar/eeb4abbca8c9ae532ef80c699c22f2e5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huy Ngo</span>           
	                <span class="date">August 27, 2018 at 10:20 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475650" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475650">
				
				<p>Absolutely amazing tutorial, Adrian! Thank you for doing this!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475650" onclick="return addComment.moveForm( &quot;comment-475650&quot;, &quot;475650&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Huy Ngo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475678"></a>
	      	
	      	<div id="li-comment-475678" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475678" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475678">
				
				<p>Thanks Huy Ngo, I’m so happy you liked the guide! Have fun with it 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475678" onclick="return addComment.moveForm( &quot;comment-475678&quot;, &quot;475678&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475656"></a>
	      	
	      	<div id="li-comment-475656" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/b0e460c3d26494201784ebe9880b5a75.png" srcset="https://secure.gravatar.com/avatar/b0e460c3d26494201784ebe9880b5a75?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ritika Agarwal</span>           
	                <span class="date">August 27, 2018 at 11:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475656" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475656">
				
				<p>Awesome tutorial!!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475656" onclick="return addComment.moveForm( &quot;comment-475656&quot;, &quot;475656&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Ritika Agarwal">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475677"></a>
	      	
	      	<div id="li-comment-475677" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475677" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475677">
				
				<p>Thanks Ritika! 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475677" onclick="return addComment.moveForm( &quot;comment-475677&quot;, &quot;475677&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-475660"></a>
	      	
	      	<div id="li-comment-475660" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/cbcf832a50ecca9518acdcdcc0678043.png" srcset="https://secure.gravatar.com/avatar/cbcf832a50ecca9518acdcdcc0678043?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mark West</span>           
	                <span class="date">August 27, 2018 at 11:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475660" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475660">
				
				<p>Great post! Even though I know this will run *very* slowly on a Raspberry Pi 3 B+ I’m stil tempted to give it a try!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475660" onclick="return addComment.moveForm( &quot;comment-475660&quot;, &quot;475660&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Mark West">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475676"></a>
	      	
	      	<div id="li-comment-475676" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475676" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475676">
				
				<p>It will run slower for sure, but it will still work. You could at the very least still apply it to single images.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475676" onclick="return addComment.moveForm( &quot;comment-475676&quot;, &quot;475676&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475664"></a>
	      	
	      	<div id="li-comment-475664" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/9e38f7a3d2656c08b412188e6ad7ce43.png" srcset="https://secure.gravatar.com/avatar/9e38f7a3d2656c08b412188e6ad7ce43?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">nisar</span>           
	                <span class="date">August 27, 2018 at 12:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475664" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475664">
				
				<p>can you provide source guide for vehicle automation?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475664" onclick="return addComment.moveForm( &quot;comment-475664&quot;, &quot;475664&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to nisar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475675"></a>
	      	
	      	<div id="li-comment-475675" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475675" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475675">
				
				<p>Vehicle automation is a pretty big area, far more than what could be covered in a single blog post. Perhaps if you could be a bit more specific?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475675" onclick="return addComment.moveForm( &quot;comment-475675&quot;, &quot;475675&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-475666"></a>
	      	
	      	<div id="li-comment-475666" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/5a6c11440f96c99edd670ec61c421608.png" srcset="https://secure.gravatar.com/avatar/5a6c11440f96c99edd670ec61c421608?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">holger</span>           
	                <span class="date">August 27, 2018 at 12:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475666" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475666">
				
				<p>Wow – i really really liked the jurassic park picture 🙂<br>
“…fully capable of obtaining super real-time performance on your GPU…”</p>
<p>I want to have this – this would mean running the model directly on torch(with gpu support enabled) – right? Open cv has no cuda support and open cl / halide also ist no big help imho.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475666" onclick="return addComment.moveForm( &quot;comment-475666&quot;, &quot;475666&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to holger">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475674"></a>
	      	
	      	<div id="li-comment-475674" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475674" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475674">
				
				<p>The Jurassic Park one is my favorite as well! You could run the model directly via Torch but I also know that OpenCV is working on Python + CUDA bindings. Once those are available I will be sharing how to use them.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475674" onclick="return addComment.moveForm( &quot;comment-475674&quot;, &quot;475674&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475672"></a>
	      	
	      	<div id="li-comment-475672" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/989017ba46090b8638d722c9485a8c40.png" srcset="https://secure.gravatar.com/avatar/989017ba46090b8638d722c9485a8c40?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Walid</span>           
	                <span class="date">August 27, 2018 at 4:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475672" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475672">
				
				<p>Worked great as usual<br>
My question is , how can I show the style image  too besides the original  and the output</p>
<p>Thanks a lot<br>
Walid</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475672" onclick="return addComment.moveForm( &quot;comment-475672&quot;, &quot;475672&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Walid">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475673"></a>
	      	
	      	<div id="li-comment-475673" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 27, 2018 at 4:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475673" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475673">
				
				<p>The networks used in this example were actually pre-trained using the style image so you can’t actually “show” the style image unless you wanted to explicitly save it to disk and then show it when executing. I have included links to each of the respective works of art in the post though 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475673" onclick="return addComment.moveForm( &quot;comment-475673&quot;, &quot;475673&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-475682"></a>
	      	
	      	<div id="li-comment-475682" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/4bb6c45b174b682450958bc3050cdef1.png" srcset="https://secure.gravatar.com/avatar/4bb6c45b174b682450958bc3050cdef1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Aldo</span>           
	                <span class="date">August 27, 2018 at 4:38 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475682" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475682">
				
				<p>Great post Adrian!<br>
I have a question, how can I get more models in ‘.t7’ extension?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475682" onclick="return addComment.moveForm( &quot;comment-475682&quot;, &quot;475682&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Aldo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475767"></a>
	      	
	      	<div id="li-comment-475767" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475767" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475767">
				
				<p>You would need to train your own model. Be sure to refer to the <a target="blank" href="https://github.com/jcjohnson/neural-style" rel="nofollow">official repo for the author’s paper.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475767" onclick="return addComment.moveForm( &quot;comment-475767&quot;, &quot;475767&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475690"></a>
	      	
	      	<div id="li-comment-475690" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/963f95ca2e7e54ea502afa6530f07bcd.png" srcset="https://secure.gravatar.com/avatar/963f95ca2e7e54ea502afa6530f07bcd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://elfuturoeshoyviejo/" rel="external nofollow" class="url">Juan</a></span>           
	                <span class="date">August 27, 2018 at 6:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475690" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475690">
				
				<p>Hi Adrian! very good post! I have a question regarding the paintings that are used as a base in the neural network, is it possible to change them? Is the retraining of the model necessary with each one? thank you very much!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475690" onclick="return addComment.moveForm( &quot;comment-475690&quot;, &quot;475690&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Juan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475769"></a>
	      	
	      	<div id="li-comment-475769" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475769" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475769">
				
				<p>If you wanted to use a different style image you would need to train the network from scratch. This behavior is one of the downsides of the Johnson et al. method to neural style transfer. The original Gatys et al. method allowed you to supply your style and content images on the fly (but would take longer to perform the transfer).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475769" onclick="return addComment.moveForm( &quot;comment-475769&quot;, &quot;475769&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-475700"></a>
	      	
	      	<div id="li-comment-475700" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/b1714e5b039bc9fc816cadea5ffa00af.png" srcset="https://secure.gravatar.com/avatar/b1714e5b039bc9fc816cadea5ffa00af?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://maryshen/" rel="external nofollow" class="url">qiang92</a></span>           
	                <span class="date">August 27, 2018 at 9:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475700" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475700">
				
				<p>Why don’t you use enumerate(models) instead of zip(range(0, len(modelPaths)), (modelPaths)))</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475700" onclick="return addComment.moveForm( &quot;comment-475700&quot;, &quot;475700&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to qiang92">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475716"></a>
	      	
	      	<div id="li-comment-475716" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/271d5f1d4f27cfc121bfdb84317a691c.png" srcset="https://secure.gravatar.com/avatar/271d5f1d4f27cfc121bfdb84317a691c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://wasabimon.com/" rel="external nofollow" class="url">secondaria</a></span>           
	                <span class="date">August 27, 2018 at 11:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475716" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475716">
				
				<p>Adrian Rosebrock, thank you for your blog post.Really thank you! Awesome.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475716" onclick="return addComment.moveForm( &quot;comment-475716&quot;, &quot;475716&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to secondaria">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475770"></a>
	      	
	      	<div id="li-comment-475770" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475770" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475770">
				
				<p>Thanks so much, I’m so happy to hear you enjoyed the tutorial! 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475770" onclick="return addComment.moveForm( &quot;comment-475770&quot;, &quot;475770&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-475727"></a>
	      	
	      	<div id="li-comment-475727" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/315795ab3912191bca5acdee6dda5591.png" srcset="https://secure.gravatar.com/avatar/315795ab3912191bca5acdee6dda5591?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">yueyu</span>           
	                <span class="date">August 28, 2018 at 2:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475727" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475727">
				
				<p>How do I know which models of OpenCV DNN support? I can’t see that it supports style migration model again</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475727" onclick="return addComment.moveForm( &quot;comment-475727&quot;, &quot;475727&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to yueyu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475771"></a>
	      	
	      	<div id="li-comment-475771" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475771" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475771">
				
				<p>The <a target="blank" href="https://github.com/opencv/opencv/wiki/Deep-Learning-in-OpenCV" rel="nofollow">OpenCV docs</a> actually mention which layer types are supported, tips on migrating networks, etc.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475771" onclick="return addComment.moveForm( &quot;comment-475771&quot;, &quot;475771&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475729"></a>
	      	
	      	<div id="li-comment-475729" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/b7634f7b6a55fd3b5a9e0a490ae7a081.png" srcset="https://secure.gravatar.com/avatar/b7634f7b6a55fd3b5a9e0a490ae7a081?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mark C</span>           
	                <span class="date">August 28, 2018 at 3:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475729" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475729">
				
				<p>This looks great i did some generative neural network and it is really cool.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475729" onclick="return addComment.moveForm( &quot;comment-475729&quot;, &quot;475729&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Mark C">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475772"></a>
	      	
	      	<div id="li-comment-475772" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475772" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475772">
				
				<p>Nice job, Mark!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475772" onclick="return addComment.moveForm( &quot;comment-475772&quot;, &quot;475772&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-475743"></a>
	      	
	      	<div id="li-comment-475743" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/db824557a5f58d87490548bf0fd37db5.png" srcset="https://secure.gravatar.com/avatar/db824557a5f58d87490548bf0fd37db5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">atom</span>           
	                <span class="date">August 28, 2018 at 5:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475743" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475743">
				
				<p>Great post again, Mr Incredible!</p>
<p>One odd wonder around reason you trained networks using torch instead others</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475743" onclick="return addComment.moveForm( &quot;comment-475743&quot;, &quot;475743&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to atom">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475773"></a>
	      	
	      	<div id="li-comment-475773" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:41 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475773" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475773">
				
				<p>I actually didn’t train the networks. The networks were trained by <a target="blank" href="https://arxiv.org/abs/1603.08155" rel="nofollow">Johnson et al.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475773" onclick="return addComment.moveForm( &quot;comment-475773&quot;, &quot;475773&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475757"></a>
	      	
	      	<div id="li-comment-475757" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/46ad43c21b1e57baa672a44ffc538e3c.png" srcset="https://secure.gravatar.com/avatar/46ad43c21b1e57baa672a44ffc538e3c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Karla</span>           
	                <span class="date">August 28, 2018 at 8:09 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475757" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475757">
				
				<p>Excellent tutorial, congratulations!! </p>
<p>One question, how can we save the output image? </p>
<p>I’ve been trying to do so, but as float32 ndarray, imwrite function does not display the same result as imshow. The conversion to uint8 (in order to save the image to disk) makes the colors from the saved image completely different to the ones seen in the image of the output window.</p>
<p>Thanks in advance!</p>
<p>Karla</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475757" onclick="return addComment.moveForm( &quot;comment-475757&quot;, &quot;475757&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Karla">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-475774"></a>
	      	
	      	<div id="li-comment-475774" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 9:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475774" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475774">
				
				<p>Interesting — I just replicated the same error as well. I’m traveling for PyImageConf right now so I can’t provide a solution but in the meantime I would suggest posting on the <a target="blank" href="https://github.com/opencv/opencv/issues" rel="nofollow">official OpenCV GitHub page</a> to see if this is a known bug or if there is a workaround.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475774" onclick="return addComment.moveForm( &quot;comment-475774&quot;, &quot;475774&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-475861"></a>
	      	
	      	<div id="li-comment-475861" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/46ad43c21b1e57baa672a44ffc538e3c.png" srcset="https://secure.gravatar.com/avatar/46ad43c21b1e57baa672a44ffc538e3c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Karla</span>           
	                <span class="date">August 29, 2018 at 4:35 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475861" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475861">
				
				<p>Thank you for attempting a quick try Adrian, I’ll try to come back with a solution. Have fun at PyImageConf! 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475861" onclick="return addComment.moveForm( &quot;comment-475861&quot;, &quot;475861&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Karla">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-475950"></a>
	      	
	      	<div id="li-comment-475950" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 30, 2018 at 9:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475950" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475950">
				
				<p>Thanks Karla!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475950" onclick="return addComment.moveForm( &quot;comment-475950&quot;, &quot;475950&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-504770"></a>
	      	
	      	<div id="li-comment-504770" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/c45edbd8d9c67277fd677581532d1dac.png" srcset="https://secure.gravatar.com/avatar/c45edbd8d9c67277fd677581532d1dac?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Taha Anwar</span>           
	                <span class="date">March 4, 2019 at 1:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-504770" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504770">
				
				<p>So here is a simple solution Adrian,</p>
<p>I have modified some lines above and now pasting those lines below:</p>
<p>output[0] += 103.939<br>
output[1] += 116.779<br>
output[2] += 123.680</p>
<p>output = output.transpose(1, 2, 0)<br>
output = np.clip(output, 0, 255)<br>
output= output.astype(‘uint8’)</p>
<p># show information on how long inference took<br>
print(“neural style transfer took {:.2f} seconds”.format(end – start))</p>
<p>#so the solution is to drop the 255 division and convert it to uint8 but before that you also have to clip the negative and 255+ values to avoid a messy image</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-504975"></a>
	      	
	      	<div id="li-comment-504975" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 5, 2019 at 8:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-504975" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504975">
				
				<p>Thanks for sharing, Taha!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-4">
	    
	    	<a name="comment-487958"></a>
	      	
	      	<div id="li-comment-487958" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/e430c353ad2ec798cb00bcaf2bfd022a.jpeg" srcset="https://secure.gravatar.com/avatar/e430c353ad2ec798cb00bcaf2bfd022a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">kaisar khatak</span>           
	                <span class="date">November 20, 2018 at 12:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-487958" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487958">
				
				<p>Any luck finding a solution? Writing video out simply generates black output frames…</p>
<p>output_movie.write(output.astype(np.uint8))</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-487958" onclick="return addComment.moveForm( &quot;comment-487958&quot;, &quot;487958&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to kaisar khatak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-497084"></a>
	      	
	      	<div id="li-comment-497084" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/db8b1ab145de63a517bddd2c726d9101.png" srcset="https://secure.gravatar.com/avatar/db8b1ab145de63a517bddd2c726d9101?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Grant Hodgson</span>           
	                <span class="date">January 19, 2019 at 3:13 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-497084" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497084">
				
				<p>Getting rid of the part where output is divided by 255.0 worked for me. I believe it is line 44. </p>
<p>This answer may be helpful: <a href="https://stackoverflow.com/questions/10571874/opencv-imwrite-saving-complete-black-jpeg" rel="nofollow">https://stackoverflow.com/questions/10571874/opencv-imwrite-saving-complete-black-jpeg</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-497084" onclick="return addComment.moveForm( &quot;comment-497084&quot;, &quot;497084&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Grant Hodgson">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-475777"></a>
	      	
	      	<div id="li-comment-475777" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/05876575de9d2d9048f2da5ce62830ee.png" srcset="https://secure.gravatar.com/avatar/05876575de9d2d9048f2da5ce62830ee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Toni</span>           
	                <span class="date">August 28, 2018 at 9:52 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475777" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475777">
				
				<p>Nice Tutorial Adrian.</p>
<p>Can we save output results as a png or jpg file ? cv2.imwrite function produces empty files.</p>
<p>Thanks a lot,</p>
<p>Toni</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475777" onclick="return addComment.moveForm( &quot;comment-475777&quot;, &quot;475777&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Toni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475797"></a>
	      	
	      	<div id="li-comment-475797" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 2:04 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475797" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475797">
				
				<p>See my reply to <a target="blank" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475757">Karla</a> — I would appreciate if other PyImageSearch readers could look into it as well 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475797" onclick="return addComment.moveForm( &quot;comment-475797&quot;, &quot;475797&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475785"></a>
	      	
	      	<div id="li-comment-475785" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/5f309b9d7f947677781853e05b12c7e1.png" srcset="https://secure.gravatar.com/avatar/5f309b9d7f947677781853e05b12c7e1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Big Adam</span>           
	                <span class="date">August 28, 2018 at 11:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475785" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475785">
				
				<p>Thank you for the great tutorial.<br>
I am confused about line 40, why do we scale the values?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475785" onclick="return addComment.moveForm( &quot;comment-475785&quot;, &quot;475785&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Big Adam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-475857"></a>
	      	
	      	<div id="li-comment-475857" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/46ad43c21b1e57baa672a44ffc538e3c.png" srcset="https://secure.gravatar.com/avatar/46ad43c21b1e57baa672a44ffc538e3c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Karla</span>           
	                <span class="date">August 29, 2018 at 3:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475857" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475857">
				
				<p>The output is a Numpy array with values within the [0-1] range, and so we convert the color scale to [0-255] range for RGB values, since this is the range for each individual color (8-bit Red, Green, Blue). By dividing by 255, the [0-255] range can be described with a [0.0-1.0] range where 0.0 means 0 (0x00) and 1.0 means 255 (0xFF).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475857" onclick="return addComment.moveForm( &quot;comment-475857&quot;, &quot;475857&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Karla">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-478760"></a>
	      	
	      	<div id="li-comment-478760" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/bbc913e6e77e094aad0eaa91e43982fd.png" srcset="https://secure.gravatar.com/avatar/bbc913e6e77e094aad0eaa91e43982fd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">BMSuser</span>           
	                <span class="date">September 17, 2018 at 9:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478760" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-478760">
				
				<p>output *= 255.0<br>
cv2.imwrite(“saved.png”, output)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478760" onclick="return addComment.moveForm( &quot;comment-478760&quot;, &quot;478760&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to BMSuser">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-475793"></a>
	      	
	      	<div id="li-comment-475793" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/8833c3c8646c52e0b3b7911b1cc42a24.png" srcset="https://secure.gravatar.com/avatar/8833c3c8646c52e0b3b7911b1cc42a24?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Z Abrams</span>           
	                <span class="date">August 28, 2018 at 1:39 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475793" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475793">
				
				<p>Cool post!<br>
Any chance you can explain/link-to how we can create a model using Keras (TF backend, like in your book), and then use that instead of a .t7 Torch file? I see that OpenCV has a readNetFromTensorflow , so is there a way to save the model and then reload it?<br>
[I’ve heard Tensorflow is “slower” than Caffe/Torch, but let’s forget that for now.]<br>
Also, I assume the speed is Network dependent, so basing it off a VGG16/19 seems a bit overkill considering newer, leaner models (mobilenet/googlenet/etc).There’s no reason these things shouldn’t be &lt;5MB, like ENet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475793" onclick="return addComment.moveForm( &quot;comment-475793&quot;, &quot;475793&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Z Abrams">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475796"></a>
	      	
	      	<div id="li-comment-475796" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 28, 2018 at 2:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475796" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475796">
				
				<p>You can’t use this code <em>directly</em> for a Keras-trained model. You would need to swap out the OpenCV model loading code for the Keras code and then apply it directly to the images/frames. The OpenCV + TensorFlow model loading functionalities are getting better, but they’re not quite there (in my opinion). You’re better off using strict TensorFlow or strict Keras to load a model and classify an image/frame than trying to make it work with OpenCV.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475796" onclick="return addComment.moveForm( &quot;comment-475796&quot;, &quot;475796&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475803"></a>
	      	
	      	<div id="li-comment-475803" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/847ebcb7f4f866a81e17c578381e3e38.jpeg" srcset="https://secure.gravatar.com/avatar/847ebcb7f4f866a81e17c578381e3e38?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://zer-0-ne.github.io/" rel="external nofollow" class="url">Abhishek Singh</a></span>           
	                <span class="date">August 28, 2018 at 3:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475803" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475803">
				
				<p>Hey Adrian, Any help here? </p>
<p>python neural_style_transfer.py –image images/giraffe.jpg \<br>
&gt; –model models/eccv16/the_wave.t7</p>
<p>[INFO] Importing Neural Style Model<br>
Traceback (most recent call last):<br>
  File “neural_style_transfer.py”, line 15, in<br>
    net = cv2.dnn.readNetFromTorch(args[“model”])</p>
<p>AttributeError: ‘module’ object has no attribute ‘dnn’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475803" onclick="return addComment.moveForm( &quot;comment-475803&quot;, &quot;475803&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Abhishek Singh">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-475963"></a>
	      	
	      	<div id="li-comment-475963" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 30, 2018 at 9:11 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475963" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475963">
				
				<p>It sounds like you’re using an older version of OpenCV. What version of OpenCV are you using? I recommend OpenCV 3.4.1 or newer for this post.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475963" onclick="return addComment.moveForm( &quot;comment-475963&quot;, &quot;475963&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-476121"></a>
	      	
	      	<div id="li-comment-476121" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/fc645ca8885faee30b679e2804e50bfa.jpeg" srcset="https://secure.gravatar.com/avatar/fc645ca8885faee30b679e2804e50bfa?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">jorge</span>           
	                <span class="date">August 31, 2018 at 1:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476121" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476121">
				
				<p>Hi Adrian great post!</p>
<p>I would like to save the modified image using cv2.imwrite(‘famMod.jpg’,output) at the end of the script but the file saved didn’t show anything. </p>
<p>You know why.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476121" onclick="return addComment.moveForm( &quot;comment-476121&quot;, &quot;476121&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to jorge">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-476741"></a>
	      	
	      	<div id="li-comment-476741" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 9:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476741" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476741">
				
				<p>Make sure you read the comments section. In particular, <a target="blank" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-475757">my reply to Karla.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476741" onclick="return addComment.moveForm( &quot;comment-476741&quot;, &quot;476741&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-476131"></a>
	      	
	      	<div id="li-comment-476131" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/c491244c1518ef86dd2e2494c9a1d7d5.png" srcset="https://secure.gravatar.com/avatar/c491244c1518ef86dd2e2494c9a1d7d5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tracy</span>           
	                <span class="date">August 31, 2018 at 5:40 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476131" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476131">
				
				<p>Is there a way for me to try this out without buying the book?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476131" onclick="return addComment.moveForm( &quot;comment-476131&quot;, &quot;476131&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Tracy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-476738"></a>
	      	
	      	<div id="li-comment-476738" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 9:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476738" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476738">
				
				<p>Hey Tracy — I’m not sure what you mean regarding buying my book. You don’t have to buy anything if you don’t want. Just use the “Downloads” section of the blog post to download my source code and example images.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476738" onclick="return addComment.moveForm( &quot;comment-476738&quot;, &quot;476738&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-476190"></a>
	      	
	      	<div id="li-comment-476190" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/da0140e3637975ed35fc91656f050124.png" srcset="https://secure.gravatar.com/avatar/da0140e3637975ed35fc91656f050124?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">J Serena</span>           
	                <span class="date">September 1, 2018 at 6:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476190" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476190">
				
				<p>Hello Adrian,</p>
<p>I starter with Machine Learning few months ago and your articles have been the lighthouse that guided me.</p>
<p>I hope you will be writing so interesting articles for a long time.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476190" onclick="return addComment.moveForm( &quot;comment-476190&quot;, &quot;476190&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to J Serena">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-476735"></a>
	      	
	      	<div id="li-comment-476735" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476735" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476735">
				
				<p>Thank you for the kind words, I really appreciate it 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-476735" onclick="return addComment.moveForm( &quot;comment-476735&quot;, &quot;476735&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-477098"></a>
	      	
	      	<div id="li-comment-477098" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/1545d45f82ede0bdb976fbfe5ec3e620.png" srcset="https://secure.gravatar.com/avatar/1545d45f82ede0bdb976fbfe5ec3e620?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">September 8, 2018 at 3:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477098" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-477098">
				
				<p>Thanks Adrian. All the articles here are brilliant. I really helps me understand the concepts and applications since I am a newbie in this field.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477098" onclick="return addComment.moveForm( &quot;comment-477098&quot;, &quot;477098&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Raj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-477484"></a>
	      	
	      	<div id="li-comment-477484" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 11, 2018 at 8:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477484" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-477484">
				
				<p>Thanks Raj, I’m happy you are enjoying the tutorials 🙂 And congratulations on getting your start in computer vision and deep learning.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477484" onclick="return addComment.moveForm( &quot;comment-477484&quot;, &quot;477484&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-477773"></a>
	      	
	      	<div id="li-comment-477773" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/3ca451cc02a1c5a544cafdb05ecb4994.png" srcset="https://secure.gravatar.com/avatar/3ca451cc02a1c5a544cafdb05ecb4994?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">nettoyer</span>           
	                <span class="date">September 12, 2018 at 5:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477773" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-477773">
				
				<p>Hello Adrian, there is my image saving workaround via ‘imageio’:<br>
import imageio<br>
…<br>
 output = cv2.cvtColor(output, cv2.COLOR_BGR2RGB)<br>
 imageio.imwrite(‘output.jpg’, output)</p>
<p>P.S.<br>
many thanks for your great example that push to learn this area</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-477773" onclick="return addComment.moveForm( &quot;comment-477773&quot;, &quot;477773&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to nettoyer">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-478096"></a>
	      	
	      	<div id="li-comment-478096" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 14, 2018 at 9:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478096" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-478096">
				
				<p>Thanks so much for sharing!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478096" onclick="return addComment.moveForm( &quot;comment-478096&quot;, &quot;478096&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-478213"></a>
	      	
	      	<div id="li-comment-478213" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/e4674d08396f85c6f9fca76a6979f332.jpeg" srcset="https://secure.gravatar.com/avatar/e4674d08396f85c6f9fca76a6979f332?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Alex</span>           
	                <span class="date">September 15, 2018 at 3:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478213" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-478213">
				
				<p>Thank you all very much. Also trying to save – but gives an error<br>
–<br>
WARNING:root:Lossy conversion from float32 to uint8.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-478213" onclick="return addComment.moveForm( &quot;comment-478213&quot;, &quot;478213&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Alex">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-480094"></a>
	      	
	      	<div id="li-comment-480094" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/9a047fd929eef0e81e9b944075ffa3ec.png" srcset="https://secure.gravatar.com/avatar/9a047fd929eef0e81e9b944075ffa3ec?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Deepak</span>           
	                <span class="date">September 28, 2018 at 1:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-480094" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-480094">
				
				<p>Can u write a blog on self driving car<br>
Basically Lane following raspberry pi car<br>
Stop detector,red light etc</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-480094" onclick="return addComment.moveForm( &quot;comment-480094&quot;, &quot;480094&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Deepak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-482947"></a>
	      	
	      	<div id="li-comment-482947" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/0bec2fe5d441d69ced49bb776792fdc8.jpeg" srcset="https://secure.gravatar.com/avatar/0bec2fe5d441d69ced49bb776792fdc8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Marco Heimeshoff</span>           
	                <span class="date">October 17, 2018 at 10:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-482947" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-482947">
				
				<p>This is wonderful. How do I activate the GPU though, right now it is just running on the processor.</p>
<p>I have a Windows 10 64bit machine with a GTX1060 and Cuda is installed, if that helps</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-482947" onclick="return addComment.moveForm( &quot;comment-482947&quot;, &quot;482947&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Marco Heimeshoff">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-483317"></a>
	      	
	      	<div id="li-comment-483317" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 20, 2018 at 7:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483317" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-483317">
				
				<p>Make sure you <a target="blank" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483248">see my reply to Jim.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483317" onclick="return addComment.moveForm( &quot;comment-483317&quot;, &quot;483317&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-483248"></a>
	      	
	      	<div id="li-comment-483248" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/d0bf8fd9db3bb1190aa3e0902c397209.png" srcset="https://secure.gravatar.com/avatar/d0bf8fd9db3bb1190aa3e0902c397209?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jim</span>           
	                <span class="date">October 19, 2018 at 6:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483248" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-483248">
				
				<p>How to use GPU acceleration with this Python code? I’ve install CUDA and numba, as this video <a href="https://www.youtube.com/watch?v=vMZ7tK-RYYc" rel="nofollow">https://www.youtube.com/watch?v=vMZ7tK-RYYc</a> has told. While, when I running the code, I found my GPU still not occupied.</p>
<p>Thanks a lot!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483248" onclick="return addComment.moveForm( &quot;comment-483248&quot;, &quot;483248&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Jim">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-483288"></a>
	      	
	      	<div id="li-comment-483288" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 20, 2018 at 7:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483288" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-483288">
				
				<p>Unfortunately at this time you cannot use CUDA acceleration via Python. I suspect support is coming soon but it’s not there yet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-483288" onclick="return addComment.moveForm( &quot;comment-483288&quot;, &quot;483288&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-484417"></a>
	      	
	      	<div id="li-comment-484417" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/da98690739d00adeccce00f6e9d61f3e.png" srcset="https://secure.gravatar.com/avatar/da98690739d00adeccce00f6e9d61f3e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Eon Kim</span>           
	                <span class="date">October 29, 2018 at 12:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-484417" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-484417">
				
				<p>Thanks Adrian. Your articles are very helpful to me. I have a question. What is the license for this code? Can I correct this code and push it on the github?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-484417" onclick="return addComment.moveForm( &quot;comment-484417&quot;, &quot;484417&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Eon Kim">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-484420"></a>
	      	
	      	<div id="li-comment-484420" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c.jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 29, 2018 at 1:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-484420" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-484420">
				
				<p>Yes, but I would appreciate an attribution with a link back to the blog post.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-484420" onclick="return addComment.moveForm( &quot;comment-484420&quot;, &quot;484420&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-506485"></a>
	      	
	      	<div id="li-comment-506485" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/5d600c50f85c484fa01b3f0077c66584.png" srcset="https://secure.gravatar.com/avatar/5d600c50f85c484fa01b3f0077c66584?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Victor Aregbede</span>           
	                <span class="date">March 13, 2019 at 10:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-506485" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-506485">
				
				<p>Hey Andrian please can this be run on google colab.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#comment-506485" onclick="return addComment.moveForm( &quot;comment-506485&quot;, &quot;506485&quot;, &quot;respond&quot;, &quot;8563&quot; )" aria-label="Reply to Victor Aregbede">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
			</ol>
		 	</div>

	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#respond" style="display:none;">Click here to cancel reply.</a></small></h3>			<form action="https://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>
<p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" value="" size="30"><label for="url">Website</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="8563" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="75d743ff7f"></p><p style="display: none;"></p>			<input type="hidden" id="ak_js" name="ak_js" value="1553587760391"></form>
			</div><!-- #respond -->
	     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="woo_search-2" class="widget widget_woo_search"><div class="search_main">
    <form method="get" class="searchform" action="https://www.pyimagesearch.com/">
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == &#39;Search...&#39;) {this.value = &#39;&#39;;}" onblur="if (this.value == &#39;&#39;) {this.value = &#39;Search...&#39;;}">
                <button type="submit" class="icon-search submit" name="submit" value="Search"></button>
    </form>    
    <div class="fix"></div>
</div>
</div><div id="text-7" class="widget widget_text"><h3>Resource Guide (it’s totally free).</h3>			<div class="textwidget"><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" class="manual-optin-trigger" data-optin-slug="mdoijtrmex7bpm0rp2hn"><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px; width: 105px; float: left;"></a>
<p>
Get your <strong>FREE 17 page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF.</strong> Inside you'll find my hand-picked tutorials, books, courses, and libraries to help you master CV and DL.
</p>
<div style="clear: left;"></div>
<center><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" style="color: rgb(255, 255, 255); text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #DF4B4B;">Download for Free!</a></center></div>
		</div><div id="text-9" class="widget widget_text"><h3>Deep Learning for Computer Vision with Python Book — OUT NOW!</h3>			<div class="textwidget"><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/"><img title="Deep Learning with Computer Vision and Python Kickstarter" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/dl_for_cv_cover.png" style="padding-bottom: 5px; width: 250px;" onclick="document.location=&#39;https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/&#39;; return false;"></a>
<p>You're interested in deep learning and computer vision, <em>but you don't know how to get started.</em> Let me help. <strong><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">My new book will teach you all you need to know about deep learning.</a></strong></p>
<p><input type="submit" value="Click here to master deep learning" style="background-color: #DF4B4B;" onclick="document.location=&#39;https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/&#39;; return false;"></p></div>
		</div><div id="text-5" class="widget widget_text"><h3>You can detect faces in images &amp; video.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV"><img title="Learn how to detect faces in images and video" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/adrian_face_detection_sidebar.png" style="padding-bottom: 5px; width: 300px;" onclick="document.location=&#39;https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection&#39;; return false;"></a>
<p>
Are you interested in <strong>detecting faces in images &amp; video?</strong> But <strong>tired of Googling for tutorials</strong> that <em>never work?</em> Then let me help! I guarantee that my new book will turn you into a <strong>face detection ninja</strong> by the end of this weekend.
<a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV" onclick="document.location=&#39;https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection&#39;; return false;">Click here to give it a shot yourself.</a>
</p>
<p><input type="submit" value="Click here to master face detection" style="background-color: #DF4B4B;" onclick="document.location=&#39;https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection&#39;; return false;"></p></div>
		</div><div id="text-8" class="widget widget_text"><h3>PyImageSearch Gurus: NOW ENROLLING!</h3>			<div class="textwidget"><div id="pyimg_gurus_carousel_container" style="width: 300px; height: 310px; cursor: pointer;" onclick="document.location=&#39;https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar&#39;; return false;">
	<div id="pyimg_gurus_carousel" style="width: 300px; height: 300px; background: url(&quot;https://www.pyimagesearch.com/static/templates/pyimagesearch-gurus/images/gurus_carousel.jpg&quot;) 0px 0px no-repeat; display: block;"></div>
</div>
<p style="margin-bottom: 8px;"><strong>The PyImageSearch Gurus course is <em>now enrolling!</em></strong> Inside the course you'll learn how to perform:</p>
<ul style="margin-bottom: 8px;">
	<li>Automatic License Plate Recognition (ANPR)</li>
	<li>Deep Learning</li>
	<li>Face Recognition</li>
	<li><em>and much more!</em></li>
</ul>
<p><strong>Click the button below to learn more about the course, take a tour, and get 10 (FREE) sample lessons</strong>.</p>
<p><input type="submit" value="Take a tour &amp; get 10 (free) lessons" style="background-color: #DF4B4B;" onclick="document.location=&#39;https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar&#39;; return false;"></p></div>
		</div><div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Hello! I’m Adrian Rosebrock.</h3><span class="left"><img alt="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/02743529311d3b8babbaf6935670ec9c(1).jpeg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=180&amp;d=mm&amp;r=g 2x" class="avatar avatar-90 photo" height="90" width="90"></span>
<p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com/">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com/">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p>
<div class="fix"></div>
</div><div id="text-4" class="widget widget_text"><h3>Learn computer vision in a single weekend.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/practical_python_and_opencv_2nd_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"></a>
<p>Want to learn computer vision &amp; OpenCV? I can teach you in a <strong>single weekend</strong>. I know. It sounds crazy, but it’s no joke. My new book is your <strong>guaranteed, quick-start guide</strong> to becoming an OpenCV Ninja. So why not give it a try? <a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV">Click here to become a computer vision ninja.</a></p>
<p><input type="submit" value="Click here to become an OpenCV ninja" style="background-color: #DF4B4B;" onclick="document.location=&#39;https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend&#39;; return false;"></p></div>
		</div><div id="text-3" class="widget widget_text"><h3>Subscribe via RSS</h3>			<div class="textwidget"><a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/rss-icon.png" style="padding-right: 10px; float: left;"></a>
<p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p></div>
		</div>
		<div id="woo_tabs-2" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#tab-pop" class="selected">Popular</a></li>                                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list" style="display: block;">
                    	<li>
				<a title="Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi" href="https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/">Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi</a>
		<span class="meta">September 4, 2017</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3" href="https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/">Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3</a>
		<span class="meta">April 18, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox</a>
		<span class="meta">June 1, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install OpenCV and Python on your Raspberry Pi 2 and B+" href="https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/">Install OpenCV and Python on your Raspberry Pi 2 and B+</a>
		<span class="meta">February 23, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Ubuntu 16.04: How to install OpenCV" href="https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/">Ubuntu 16.04: How to install OpenCV</a>
		<span class="meta">October 24, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Basic motion detection and tracking with Python and OpenCV" href="https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/">Basic motion detection and tracking with Python and OpenCV</a>
		<span class="meta">May 25, 2015</span>
		<div class="fix"></div>
	</li>
		<li style="border-bottom: 0px;">
				<a title="Real-time object detection with deep learning and OpenCV" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">Real-time object detection with deep learning and OpenCV</a>
		<span class="meta">September 18, 2017</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         </aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
    <!--#footer-widgets-container-->
    <div id="footer-widgets-container">
	</div><!--/#footer_widgets_container_end-->
    <!--#footer_container_start-->
    <div id="footer-container">
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			Find me on <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, and <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.<br>
			<p>© 2019 PyImageSearch. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
		</div>

	</footer>

	    </div><!--/#footer_container_end-->

	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'auto', {'allowLinker': true});
  ga('require', 'linker');
  ga('linker:autoLink', ['dpdcart.com']);
  ga('send', 'pageview');

</script>

<!-- -- Clicky ---->
<script src="./Neural Style Transfer with OpenCV - PyImageSearch_files/js" type="text/javascript"></script>
<script type="text/javascript">try{ clicky.init(101083980); }catch(e){}</script>

<!-- Drip -->
<script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>

<script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54220efd7ab7f03f7e000043.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);

// visited blog tracking
window._pq = window._pq || [];
_pq.push(['track', 'visited blog']);
  })();
</script>

<!-- facebook -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '1465896023527386');
  fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=1465896023527386&ev=PageView&noscript=1"
/></noscript>
<!-- facebook -->

<!-- -- scroll to code ---->
<script type="text/javascript">
jQuery(document).ready(function(){
	jQuery("#scroll_to_code").click(function(event){
		event.preventDefault();
		jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);
	});
});
</script>

<!-- gurus sidebar carousel -->
<script type="text/javascript">
	jQuery(document).ready(function(){
		GURUS_CAROUSEL_IDX = 1;

		window.setInterval(function(){
			jQuery("#pyimg_gurus_carousel").fadeOut(function(){
				GURUS_CAROUSEL_TOP = GURUS_CAROUSEL_IDX * -300;
				jQuery("#pyimg_gurus_carousel").css("background-position", "0px " + GURUS_CAROUSEL_TOP + "px");
				GURUS_CAROUSEL_IDX += 1;

				if (GURUS_CAROUSEL_IDX == 4){
					GURUS_CAROUSEL_IDX = 0;
				}
			}).delay(250).fadeIn();
		}, 5000);
	});
</script>
<!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Post-comment Opt-in --><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/api.min.js" data-campaign="amffglsaxwjqih0cxwby" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: Template --><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/api.min.js" data-campaign="tortsem7qkvyuxc4cyfi" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: OpenCV Neural Style --><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/api.min.js" data-campaign="vzf5lwtkjs57xraeatsa" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CVDL Resource Guide --><script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/api.min.js" data-campaign="mdoijtrmex7bpm0rp2hn" data-user="18464" data-env="production"></script><!-- / OptinMonster --><div style="position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0"><div class="omapi-shortcode-helper">[email]</div><div class="omapi-shortcode-parsed">[email]</div></div>		<script type="text/javascript">var amffglsaxwjqih0cxwby_shortcode = true;var tortsem7qkvyuxc4cyfi_shortcode = true;var vzf5lwtkjs57xraeatsa_shortcode = true;var mdoijtrmex7bpm0rp2hn_shortcode = true;</script>
		<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/69faf.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var wpcf7 = {"apiSettings":{"root":"https:\/\/www.pyimagesearch.com\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"recaptcha":{"messages":{"empty":"Please verify that you are not a robot."}},"cached":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/0fef6.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var pyISjsAfterComment = {"function":"window._dcq = window._dcq || [];\r\nwindow._dcq.push([\"track\", \"Submitted a comment\"]);"};
/* ]]> */
</script>
<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/15657.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var pyISOptinMonster = {"post_title":"Neural Style Transfer with OpenCV","campaign_id":"tortsem7qkvyuxc4cyfi","form_image":"https:\/\/s3-us-west-2.amazonaws.com\/static.pyimagesearch.com\/optins\/cs_opencv_neural_style.png","drip_form_submission_url":"https:\/\/www.getdrip.com\/forms\/619800381\/submissions","drip_id":"619800381"};
/* ]]> */
</script>


<script type="text/javascript" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/fbab0.js"></script>

		<script type="text/javascript">var omapi_localized = { ajax: 'https://www.pyimagesearch.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: '728a5996e4', slugs: {"amffglsaxwjqih0cxwby":{"slug":"amffglsaxwjqih0cxwby","mailpoet":false},"tortsem7qkvyuxc4cyfi":{"slug":"tortsem7qkvyuxc4cyfi","mailpoet":false},"vzf5lwtkjs57xraeatsa":{"slug":"vzf5lwtkjs57xraeatsa","mailpoet":false},"mdoijtrmex7bpm0rp2hn":{"slug":"mdoijtrmex7bpm0rp2hn","mailpoet":false}} };</script>
		


<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Object Caching 18884/4110 objects using disk
Page Caching using disk: enhanced 
Minified using disk
Database Caching 18/46 queries in 0.121 seconds using disk

Served from: www.pyimagesearch.com @ 2019-03-26 02:31:37 by W3 Total Cache
--><script type="text/javascript" async="" src="./Neural Style Transfer with OpenCV - PyImageSearch_files/in.php"></script><div id="om-amffglsaxwjqih0cxwby-holder"></div><div id="om-mdoijtrmex7bpm0rp2hn-holder"></div><div id="om-tortsem7qkvyuxc4cyfi-holder"></div><div id="om-vzf5lwtkjs57xraeatsa-holder"></div><div class="drip-tab-container">
  <div id="drip-129969" class="drip-tab bottom right no-image classic">
    <div id="drip-header-129969" class="drip-header drip-hidden">
      <a href="https://www.pyimagesearch.com/2018/08/27/neural-style-transfer-with-opencv/#" id="drip-toggle-129969" class="drip-toggle">
        <h2 id="drip-teaser-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h2>
        <span id="drip-tab-up-129969" class="drip-arrow up">
          <svg width="12px" height="8px" viewBox="1362 659 12 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <polygon id="right_angle" stroke="none" fill="#FFFFFF" fill-rule="evenodd" transform="translate(1368.000000, 662.703125) rotate(-90.000000) translate(-1368.000000, -662.703125) " points="1364.29688 667.296875 1368.89062 662.703125 1364.29688 658.109375 1365.70312 656.703125 1371.70312 662.703125 1365.70312 668.703125"></polygon>
          </svg>
        </span>
        <span id="drip-tab-down-129969" class="drip-arrow down" style="display: none"></span>
      </a>
    </div>

    <div id="drip-content-129969" class="drip-content drip-clearfix" style="height: auto; bottom: 0px;">
      <div id="drip-form-panel-129969" class="drip-panel" style="display: block;">
        <a id="drip-close-129969" class="drip-close">×</a>
        <h3 id="drip-content-header-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h3>
        <div id="drip-scroll-129969" class="drip-scroll">
          <div class="drip-clearfix">
            
            <div class="drip-description"><strong>Interested in computer vision, OpenCV, and deep learning, but don't know where to start?</strong>&nbsp;Let me help. I've created a&nbsp;<em>free</em>, 17-day crash course that is hand-tailored to give you the best possible introduction to computer vision and deep learning. Sound good? Enter your email below to get started.</div>
          </div>
          <form id="drip-form-129969">
            <div style="display: none">
              <input type="hidden" name="form_id" value="129969">
            </div>
            <dl class="no-labels">
              
                
                  <dt>Email Address</dt>
                  <dd class="drip-clearfix">
                    
                      <input type="email" name="fields[email]" value="" placeholder="Email Address" class="drip-text-field">
                      <div id="drip-errors-for-email-129969" class="drip-errors"></div>
                    
                  </dd>
                
              
              
              <div style="display: none;" aria-hidden="true">
                <dt for="website">Website</dt>
                <dd>
                  <input type="text" id="website" name="website" placeholder="Website" class="drip-text-field" tabindex="-1" autocomplete="false" value="">
                </dd>
              </div>
            </dl>
            <div class="form-controls">
              <input type="submit" name="submit" value="START MY EMAIL COURSE" id="drip-submit-129969" class="drip-submit-button">
            </div>
          </form>
        </div>
      </div>

      <div id="drip-success-panel-129969" class="drip-success drip-panel drip-clearfix" style="display: none">
        <a id="drip-hide-129969" class="drip-close">×</a>
        <h3>Almost there...</h3>
        <p class="drip-description">To start your free 17-day computer vision and deep learning crash course, confirm your email address by clicking the link in the email I just sent you.</p>
      </div>

      
    </div>
  </div>
</div></body><div id="cye-workaround-body" style="position: absolute; left: 0px; top: 0px; z-index: -2147483646; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgb(255, 255, 255); height: 25780px; width: 1479px;"></div><div id="cye-workaround-body-image" style="position: absolute; left: 0px; top: 0px; z-index: -2147483645; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); height: 25780px; width: 1479px;"></div></html>